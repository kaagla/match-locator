{"version":3,"sources":["containers/MapContainer.js","containers/NaviContainer.js","containers/InfoContainer.js","containers/components/IconComponent.js","containers/components/CalendarComponent.js","containers/components/CountBadgeComponent.js","containers/components/SearchInputComponent.js","containers/components/ListItemComponent.js","containers/components/ListComponent.js","containers/components/ResultsComponent.js","containers/SearchContainer.js","containers/components/StandingsTableComponent.js","containers/components/MatchPreviewComponent.js","containers/components/MatchListItemsComponent.js","containers/MatchListContainer.js","containers/LocationPopupContainer.js","containers/LocateContainer.js","containers/StandingsContainer.js","containers/LoadingContainer.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","className","rel","href","center","mapCenter","lat","lon","zoom","city","window","innerWidth","getZoom","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","url","locations","map","location","Marker","key","_id","position","opacity","onclick","handleLocationPopup","Popup","ZoomControl","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Navi","naviItems","Object","keys","item","numMatches","onClick","handleNaviChange","naviSelected","Info","target","DBinfo","updated","date","year","split","month","parseInt","displayDate","IconDiv","icon","definition","Calendar","today","Date","toJSON","useState","showCalendar","setShowCalendar","dateRangeOption","handleCalClick","day","getTime","from","dateFrom","to","dateTo","setDateFrom","setDateTo","isOtherMonth","displayDateWyear","useEffect","document","getElementById","slice","join","scrollIntoView","behavior","block","years","calData","yearData","toString","monthDays","thisMonth","thisYear","daysInMonth","getDate","startDay","getDay","endDay","data","i","theDay","theMonth","getMonth","theYear","getFullYear","push","cal","j","length","getCalforMonth","getCalData","table","id","week","index","isBetweenSelected","isOtherYear","value","onChange","e","tDay","setDate","nwMonday","nwSunday","tday","lastDayOfMonth","nmFirstday","nmLastDay","tyLastDay","handleDateRangeOption","CountBadge","count","SearchInput","type","searchText","placeholder","setSearchText","ListItem","selectionOpen","setSelectionOpen","name","favourites","filter","fav","handleSelection","filters","fil","applyQuickSearch","includes","applyGetStandings","List","items","Results","info","isLoading","loadingText","changesMade","applySearch","Search","selectedMenuItem","setSelectedMenuItem","JSON","parse","localStorage","getItem","setFilters","setFavourites","setChangesMade","searchItems","cities","levels","teams","group","newFavourites","setItem","stringify","newFilters","getMatches","getStandings","errorText","matches","every","toLowerCase","StandingsTable","selectedSort","setSelectedSort","sortDescending","setSortDescending","standings","selectedGroup","headings","applySort","header","standingsByGroup","g","sort","a","b","sortedStandingsByGroup","heading","team","indexOf","played","wins","draws","losses","scored","conceded","difference","points","MatchPreview","showStandings","setShowStandings","previousMatches","setPreviousMatches","setStandings","matchesError","setMatchesError","standingsError","setStandingsError","getResult","match","score","homeScore","awayScore","home_name","away_name","isUpcomingMatch","y","m","d","level","home","away","axios","post","then","res","catch","error","console","log","getPreviewData","reverse","data2","err","MatchListItems","itemIsOpen","setItemIsOpen","selectedMatches","setSelectedMatches","displayVenue","venue","venue_name","groupbyItem","time","matchDate","tyear","tmonth","x","MatchList","setGroupByItem","groupbySet","Set","add","Array","LocationPopup","selectedLocation","setShowPopup","address","postalcode","open","venues","getVenues","Locate","unshift","c","handleMapCenterChange","handleSelect","Standings","initialSelectedGroup","setSelectedGroup","groups","selectedStandings","Loading","App","setMapCenter","showPopup","setSeletedLocation","setNaviSelected","setTeams","setCities","setLevels","setMatches","setLocations","setSelectedStandings","setIsLoading","setLoadingText","setErrorText","setDBinfo","getData","get","charAt","location_id","dates","locIds","ids","r","setTimeout","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.f186f943.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup, ZoomControl } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport './MapContainer.css';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nexport default function Map(props) {\r\n\r\n    function getZoom() {\r\n        let zoom;\r\n        if (props.mapCenter.city !== 'Suomi') {\r\n            zoom = 11\r\n        } else {\r\n            zoom = 6\r\n        }\r\n\r\n        if (window.innerWidth <= 600) {\r\n            return zoom-1\r\n        }\r\n        return zoom\r\n    }\r\n\r\n    return (\r\n        <div className='map-container'>\r\n            <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/leaflet.css\" />\r\n            <LeafletMap\r\n                center={[props.mapCenter.lat, props.mapCenter.lon]}\r\n                zoom={getZoom()}\r\n                attributionControl={true}\r\n                zoomControl={false}\r\n                doubleClickZoom={true}\r\n                scrollWheelZoom={true}\r\n                dragging={true}\r\n                animate={true}\r\n                easeLinearity={0.35}\r\n            >\r\n                <TileLayer\r\n                url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n                />\r\n                {props.locations.map(location =>\r\n                <Marker\r\n                    key={location._id}\r\n                    position={[location.lat,location.lon]}\r\n                    opacity={0.9}\r\n                    onclick={() => props.handleLocationPopup(location)}\r\n                >\r\n                    <Popup>\r\n                        {' '}\r\n                    </Popup>\r\n                </Marker>\r\n                )}\r\n                <ZoomControl position='bottomright' />\r\n            </LeafletMap>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './NaviContainer.css';\r\n\r\nexport default function Navi(props) {\r\n    const naviItems = {\r\n        'info': 'INFO',\r\n        'search': 'HAKU',\r\n        'eye': 'KOHDISTUS',\r\n        'map': 'KARTTA',\r\n        'list-ul': 'OTTELUT'\r\n    }\r\n    return (\r\n        <div className='navi-container'>\r\n            <div className='navi-box'>\r\n                <ul>\r\n                    {Object.keys(naviItems).map(item =>\r\n                    (props.numMatches === 0 && item === 'list-ul') ?\r\n                    <li\r\n                        key={item}\r\n                    >\r\n                        <span className='navi-item-disabled'>\r\n                        <i className={\"fas fa-\"+item}></i>\r\n                        <span className='navi-definition'>{naviItems[item]}</span>\r\n                        </span>\r\n                    </li>\r\n                    :\r\n                    <li\r\n                        key={item}\r\n                        onClick={() => props.handleNaviChange(item)}\r\n                    >\r\n                        <span className={props.naviSelected === item ? 'navi-item-selected':'navi-item'}>\r\n                        <i className={\"fas fa-\"+item}></i>\r\n                        <span className='navi-definition'>{naviItems[item]}</span>\r\n                        </span>\r\n                    </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './InfoContainer.css'\r\n\r\nexport default function Info(props) {\r\n\r\n    function displayDate(date) {\r\n        let year = date.split('-')[0]\r\n        let month = parseInt(date.split('-')[1])\r\n        let day = parseInt(date.split('-')[2])\r\n        return day + '.' + month + '.' + year\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='info-container'>\r\n                    <div><h3>missä pelaa?</h3></div>\r\n                    <div>\r\n                        \"Jalkapallo-ottelut helposti kartalle.\"\r\n                    </div>\r\n                    <div>\r\n                        Ottelu-, lokaatio- ja sarjatilannetiedot on kerätty Suomen Palloliiton \r\n                        sivuilta <a href='https://www.palloliitto.fi' target='_blank'>(www.palloliitto.fi)</a>.                   \r\n                    </div>\r\n                    <div className='info-container--details'>\r\n                        {props.DBinfo.updated ?\r\n                        <span>Ottelutietokanta päivitetty: {displayDate(props.DBinfo.updated)}</span>\r\n                        :\r\n                        <span></span>\r\n                        }\r\n                        <span>{'Sovelluksen lähdekoodi: '}\r\n                            <a href='https://www.github.com/kaagla/match-locator' target='_blank'>\r\n                                <i className=\"fab fa-github\"></i>\r\n                            </a></span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './IconComponent.css';\r\n\r\nexport default function IconDiv(props) {\r\n    return (\r\n        <div className='icon-component'>\r\n            <div>\r\n                <i className={\"fas fa-\"+props.icon}></i>\r\n            </div>\r\n            <div className='icon-component--definition'>\r\n                {props.definition}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './CalendarComponent.css'\r\n\r\nexport default function Calendar(props) {\r\n\r\n    const today = new Date().toJSON().split('T')[0]\r\n\r\n    //const [dateFrom, setDateFrom] = useState(today)\r\n    //const [dateTo, setDateTo] = useState(today)\r\n    const [showCalendar, setShowCalendar] = useState(false)\r\n    const [dateRangeOption, setDateRangeOption] = useState('')\r\n\r\n    function getCalData(years) {\r\n        let calData = []\r\n        years.map(year => {\r\n\r\n            [1,2,3,4,5,6,7,8,9,10,11,12].map(month => {\r\n                let yearData = {'year': year, 'month': month <= 9 ? '0'+month : month.toString()}\r\n                yearData.monthDays = getCalforMonth(month, year)\r\n                calData.push(yearData)\r\n            })\r\n            \r\n        })\r\n        return calData\r\n    }\r\n\r\n    function getCalforMonth(month, year) {\r\n        let thisMonth =  month -1\r\n        let thisYear = year\r\n        let daysInMonth = new Date(thisYear, thisMonth+1, 0).getDate()\r\n        \r\n        let startDay = -(new Date(thisYear, thisMonth, 1).getDay() - 2)\r\n\r\n        if (new Date(thisYear, thisMonth, 1).getDay() === 0) {\r\n            startDay = -5\r\n        }\r\n\r\n        let endDay = daysInMonth + (7 - new Date(thisYear, thisMonth, daysInMonth).getDay())\r\n        let data = []\r\n\r\n        for (let i = startDay; i <= endDay; i++) {\r\n            let theDay = new Date(thisYear, thisMonth, i)\r\n            let day = theDay.getDate()\r\n            day = day <= 9 ? '0'+day : day\r\n            let weekDay = theDay.getDay()\r\n            let theMonth = theDay.getMonth() + 1\r\n            theMonth = theMonth <= 9 ? '0'+theMonth : theMonth\r\n            let theYear = theDay.getFullYear()\r\n            \r\n            data.push({\r\n                'date': theYear + '-' + theMonth + '-' + day\r\n            })\r\n        }\r\n\r\n        let cal = []\r\n        for (let j = 0; j < (data.length/7); j++) {\r\n            cal.push(data.slice(j*7, (j+1)*7))\r\n        }\r\n        return cal\r\n    }\r\n\r\n    const isThisDay = (day) => {\r\n        let getToday = new Date()\r\n        let today = getToday.getFullYear() + '-' + (getToday.getMonth()+1) + '-' + getToday.getDate()\r\n\r\n        return day === today ? true : false\r\n    }\r\n\r\n    function handleCalClick(item) {\r\n        let day = new Date(item).getTime()\r\n        let from = new Date(props.dateFrom).getTime()\r\n        let to = new Date(props.dateTo).getTime()\r\n\r\n        if (day < from || from !== to) {\r\n            props.setDateFrom(item)\r\n            props.setDateTo(item)\r\n        } else if (from === to) {\r\n            props.setDateTo(item)\r\n        }\r\n    }\r\n\r\n    function isBetweenSelected(day) {\r\n        if (props.dateTo === null) {\r\n            if (day === props.dateFrom) {\r\n                return true\r\n            }\r\n        } else {\r\n            if (day >= props.dateFrom && day <= props.dateTo) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    function isOtherMonth(day, month) {\r\n        return parseInt(day.split('-')[1]) !== parseInt(month) ? true : false\r\n    }\r\n\r\n    function isOtherYear(day, year) {\r\n        return parseInt(day.split('-')[0]) !== parseInt(year) ? true : false\r\n    }\r\n\r\n    function handleDateRangeOption(value) {\r\n        if (value === 'today') {\r\n            props.setDateFrom(today)\r\n            props.setDateTo(today)\r\n        }\r\n        if (value === 'this-week') {\r\n            let tDay = new Date()\r\n            props.setDateFrom(today)\r\n            if (tDay.getDay() !== 0) {\r\n               props.setDateTo(new Date(tDay.setDate(tDay.getDate() + (7 - new Date().getDay()))).toJSON().split('T')[0])\r\n            } else {\r\n                props.setDateTo(today)\r\n            }\r\n        }\r\n        if (value === 'next-week') {\r\n            let nwMonday = new Date(new Date().setDate(new Date().getDate() + (8 - new Date().getDay())))\r\n            let nwSunday = new Date(nwMonday)\r\n            nwSunday.setDate(nwSunday.getDate() + 6)\r\n            props.setDateFrom(nwMonday.toJSON().split('T')[0])\r\n            props.setDateTo(nwSunday.toJSON().split('T')[0])\r\n        }\r\n        if (value === 'this-month') {\r\n            props.setDateFrom(today)\r\n            let tday = new Date(today)\r\n            let lastDayOfMonth = new Date(tday.setDate(32))\r\n            lastDayOfMonth = new Date(tday.setDate(0)).toJSON().split('T')[0]\r\n            props.setDateTo(lastDayOfMonth)\r\n        }\r\n        if (value === 'next-month') {\r\n            let nmFirstday = new Date(new Date().setDate(32)).toJSON().split('T')[0]\r\n            let nmLastDay = new Date(new Date(new Date().setDate(64)).setDate(0)).toJSON().split('T')[0]\r\n            props.setDateFrom(nmFirstday)\r\n            props.setDateTo(nmLastDay)\r\n        }\r\n        if (value === 'this-year') {\r\n            let tyLastDay = new Date(new Date().getFullYear(), 11, 32).toJSON().split('T')[0]\r\n            props.setDateFrom(today)\r\n            props.setDateTo(tyLastDay)\r\n        }\r\n    }\r\n\r\n    function displayMonth(month) {\r\n        const names = {\r\n            '01': 'tammikuu',\r\n            '02': 'helmikuu',\r\n            '03': 'maaliskuu',\r\n            '04': 'huhtikuu',\r\n            '05': 'toukokuu',\r\n            '06': 'kesäkuu',\r\n            '07': 'heinäkuu',\r\n            '08': 'elokuu',\r\n            '09': 'syyskuu',\r\n            '10': 'lokakuu',\r\n            '11': 'marraskuu',\r\n            '12': 'joulukuu'\r\n        }\r\n        return names[month]\r\n    }\r\n\r\n    function displayDate(date) {\r\n        let month = parseInt(date.split('-')[1])\r\n        let day = parseInt(date.split('-')[2])\r\n        return day + '.' + month + '.'\r\n    }\r\n\r\n    function displayDateWyear(date) {\r\n        let year = date.split('-')[0]\r\n        let month = parseInt(date.split('-')[1])\r\n        let day = parseInt(date.split('-')[2])\r\n        return day + '.' + month + '.' + year \r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        document.getElementById(props.dateTo.split('-').slice(0,2).join('-')).scrollIntoView({behavior: \"auto\", block: \"center\"})           \r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n        document.getElementById(props.dateTo.split('-').slice(0,2).join('-')).scrollIntoView({behavior: \"smooth\", block: \"center\"})          \r\n        \r\n    }, [props.dateTo]);\r\n\r\n    return (\r\n        <div className='calendar-container'>\r\n            <div className='calendar-component'>\r\n                <div\r\n                    className='calendar-component--display'\r\n                    onClick={() => setShowCalendar(!showCalendar)}\r\n                >\r\n                    {props.dateFrom === props.dateTo ?\r\n                    \r\n                    <div>\r\n                        {displayDateWyear(props.dateFrom)}\r\n                    </div>\r\n                    \r\n                    :\r\n                    <div>\r\n                        {props.dateFrom.split('-')[0] === props.dateTo.split('-')[0] ?\r\n                        <span>{displayDate(props.dateFrom)}</span>\r\n                        :\r\n                        <span>{displayDateWyear(props.dateFrom)}</span>\r\n                        }\r\n                        <span> &rarr; </span>\r\n                        <span>{displayDateWyear(props.dateTo)}</span>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                \r\n                <div className='calendar-component--table-headings'>\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <th>MA</th>\r\n                                <th>TI</th>\r\n                                <th>KE</th>\r\n                                <th>TO</th>\r\n                                <th>PE</th>\r\n                                <th>LA</th>\r\n                                <th>SU</th>\r\n                            </tr>\r\n                        </thead>\r\n                    </table>\r\n                </div>\r\n                <div className='calendar-component--tables'>\r\n                {getCalData([2019,2020,2021]).map(table =>\r\n                <div\r\n                    className='calendar-component--month'\r\n                    key={table.year+'-'+table.month}\r\n                    id={table.year+'-'+table.month}\r\n                >\r\n                    <h5>{displayMonth(table.month) + ' ' + table.year}</h5>\r\n                    <table>\r\n                        <tbody>\r\n                            {table.monthDays.map((week, index) =>\r\n                            <tr key={index}>\r\n                                {week.map(day =>\r\n                                isBetweenSelected(day.date) && !isOtherMonth(day.date, table.month) ?\r\n                                day.date === props.dateFrom || day.date === props.dateTo ?\r\n                                <td\r\n                                    key={day.date}\r\n                                    className='calendar-component--item-selected'\r\n                                    onClick={() => handleCalClick(day.date)}\r\n                                >\r\n                                    \r\n                                    {day.date.split('-')[2]}\r\n                                </td>\r\n                                :\r\n                                <td\r\n                                    key={day.date}\r\n                                    className='calendar-component--item-selected-range'\r\n                                    onClick={() => handleCalClick(day.date)}\r\n                                >\r\n                                    \r\n                                    {day.date.split('-')[2]}\r\n                                </td>\r\n                                :\r\n                                isOtherMonth(day.date, table.month) ?\r\n                                    isOtherYear(day.date, table.year) ?\r\n                                    <td key={day.date}></td>\r\n                                    :\r\n                                    <td\r\n                                        key={day.date}\r\n                                        className='calendar-component--item-difmonth'\r\n                                        onClick={() => handleCalClick(day.date)}\r\n                                    >\r\n                                        {day.date.split('-')[2]}\r\n                                    </td>\r\n                                :\r\n                                <td\r\n                                    key={day.date}\r\n                                    className='calendar-component--item'\r\n                                    onClick={() => handleCalClick(day.date)}\r\n                                >\r\n                                    {day.date.split('-')[2]}\r\n                                </td>\r\n                                )}\r\n                            </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                )}\r\n                </div>\r\n                <div className='calendar-component--shortcut'>\r\n                    <form>\r\n                        <label>\r\n                            <select\r\n                                value={dateRangeOption}\r\n                                onChange={(e) => handleDateRangeOption(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Ajanjakson pikavalinta</option>\r\n                                <option value=\"today\">Tänään</option>\r\n                                <option value=\"this-week\">Tulevat tällä viikolla</option>\r\n                                <option value=\"next-week\">Ensi viikolla</option>\r\n                                <option value=\"this-month\">Tulevat tässä kuussa</option>\r\n                                <option value=\"next-month\">Ensi kuussa</option>\r\n                                <option value=\"this-year\">Tulevat tänä vuonna</option>\r\n                            </select>\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './CountBadgeComponent.css'\r\n\r\nexport default function CountBadge(props) {\r\n    return (\r\n        <div className='count-badge-component'>\r\n            <div className='count-badge-component--item'>\r\n                {props.count}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './SearchInputComponent.css'\r\n\r\nexport default function SearchInput(props) {\r\n\r\n    return (\r\n        <div className='search-input-component'>\r\n            <form>\r\n                <label>\r\n                    <input\r\n                        className=\"input-search\"\r\n                        type=\"search\"\r\n                        value={props.searchText}\r\n                        placeholder={props.placeholder}\r\n                        onChange={(e) => props.setSearchText(e.target.value)}\r\n                    />\r\n                </label>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport IconDiv from './IconComponent';\r\nimport './ListItemComponent.css'\r\n\r\nexport default function ListItem(props) {\r\n\r\n    const [selectionOpen, setSelectionOpen] = useState(false)\r\n\r\n    return (\r\n        <div className='list-item-component'>\r\n            <div\r\n                className='list-item-component--header'\r\n                onClick={() => setSelectionOpen(!selectionOpen)}\r\n            >\r\n                <span>{props.item.name}</span>\r\n                <span><i className={selectionOpen ? 'arrow-up':'arrow-down'}></i></span>\r\n            </div>\r\n            {selectionOpen ?\r\n            <div className='list-item-component--options'>\r\n                <div>\r\n                    <div>VALINNAT</div>\r\n                    <div className='list-item-component--options-group'>\r\n                        <span \r\n                            className={props.favourites.filter(fav => fav.name === props.item.name).length > 0 ? 'list-item-component--options-selected':''}\r\n                            onClick={() => props.handleSelection('favourites', props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'star'}\r\n                                definition={'SUOSIKKI'}\r\n                            />   \r\n                        </span>      \r\n                        <span\r\n                            className={props.filters.filter(fil => fil.name === props.item.name).length > 0 ? 'list-item-component--options-selected':''}\r\n                            onClick={() => props.handleSelection('filters', props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'filter'}\r\n                                definition={'SUODATIN'}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>NÄYTÄ</div>\r\n                    <div className='list-item-component--options-group'>\r\n                        <span\r\n                            onClick={() => props.applyQuickSearch(props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'list-ul'}\r\n                                definition={'OTTELUT'}\r\n                            />\r\n                        </span>\r\n                        {['level','team'].includes(props.item.type) ?\r\n                        <span\r\n                            onClick={() => props.applyGetStandings(props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'trophy'}\r\n                                definition={'SARJATILANNE'}\r\n                            />\r\n                        </span>\r\n                        :\r\n                        <span></span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport ListItem from './ListItemComponent'\r\nimport './ListComponent.css'\r\n\r\nexport default function List(props) {\r\n    return (\r\n        <div className='list-component'>\r\n            <ul>\r\n                {props.items.map(item =>\r\n                    <li key={item.name}>\r\n                        <ListItem\r\n                            item={item}\r\n                            favourites={props.favourites}\r\n                            filters={props.filters}\r\n                            handleSelection={props.handleSelection}\r\n                            applyQuickSearch={props.applyQuickSearch}\r\n                            applyGetStandings={props.applyGetStandings}\r\n                        />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './ResultsComponent.css'\r\n\r\nexport default function Results(props) {\r\n\r\n    //const numMatches = props.numMatches\r\n    let info = 'Hakutulos: '\r\n\r\n    if (props.numMatches === 0) {\r\n        info += 'ei otteluita.'\r\n    } else if (props.numMatches === 1) {\r\n        info += '1 ottelu.'\r\n    } else {\r\n        info += `${props.numMatches} ottelua.`\r\n    }\r\n\r\n    return (\r\n        <div className='results-component'>\r\n            <span>\r\n                {props.isLoading ?\r\n                props.loadingText\r\n                :\r\n                info\r\n                }\r\n            </span>\r\n            <span \r\n                className={props.changesMade ? 'results-component--update-btn': 'results-component--update-btn-hide'}\r\n                onClick={() => props.applySearch()}\r\n            >PÄIVITÄ HAKUTULOKSET</span>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport IconDiv from './components/IconComponent';\r\nimport Calendar from './components/CalendarComponent';\r\nimport CountBadge from './components/CountBadgeComponent';\r\nimport SearchInput from './components/SearchInputComponent';\r\nimport List from './components/ListComponent'\r\nimport Results from './components/ResultsComponent'\r\nimport './SearchContainer.css';\r\n\r\nexport default function Search(props) {\r\n    /*\r\n    let initialFilters = []\r\n\r\n    if (JSON.parse(window.localStorage.getItem('filters'))) {\r\n        initialFilters = JSON.parse(window.localStorage.getItem('filters'))\r\n    }\r\n\r\n    let initialFavourites = []\r\n\r\n    if (JSON.parse(window.localStorage.getItem('favourites'))) {\r\n        initialFavourites = JSON.parse(window.localStorage.getItem('favourites'))\r\n    }\r\n    */\r\n    const today = new Date().toJSON().split('T')[0]\r\n    const [dateFrom, setDateFrom] = useState(today);\r\n    const [dateTo, setDateTo] = useState(today);\r\n    const [selectedMenuItem, setSelectedMenuItem] = useState('calendar')\r\n    const [searchText, setSearchText] = useState('')\r\n    const [filters, setFilters] = useState(getInitialFilters);\r\n    const [favourites, setFavourites] = useState(getInitialFavourites);\r\n    const [changesMade, setChangesMade] = useState(false);\r\n\r\n    const searchItems = [...props.cities, ...props.levels, ...props.teams]\r\n\r\n    function getInitialFavourites() {\r\n\r\n        if (JSON.parse(window.localStorage.getItem('favourites'))) {\r\n            return JSON.parse(window.localStorage.getItem('favourites'))\r\n        }\r\n        return []\r\n    }\r\n\r\n    function getInitialFilters() {\r\n\r\n        if (JSON.parse(window.localStorage.getItem('filters'))) {\r\n            return JSON.parse(window.localStorage.getItem('filters'))\r\n        }\r\n        return []\r\n    }\r\n\r\n    function handleSelection(group, item) {\r\n        if (group === 'favourites') {\r\n            if (favourites.filter(fav => fav.name === item.name).length === 0) {\r\n                let newFavourites = [...favourites]\r\n                newFavourites.push(item)\r\n                setFavourites(newFavourites)\r\n                window.localStorage.setItem('favourites', JSON.stringify(newFavourites))\r\n            } else {\r\n                let newFavourites = [...favourites].filter(fav => fav.name !== item.name)\r\n                setFavourites(newFavourites)\r\n                window.localStorage.setItem('favourites', JSON.stringify(newFavourites))\r\n            }\r\n        }\r\n        if (group === 'filters') {\r\n            if (filters.filter(fil => fil.name === item.name).length === 0) {\r\n                let newFilters = [...filters]\r\n                newFilters.push(item)\r\n                setFilters(newFilters)\r\n                window.localStorage.setItem('filters', JSON.stringify(newFilters))\r\n            } else {\r\n                let newFilters = [...filters].filter(filter => filter.name !== item.name)\r\n                setFilters(newFilters)\r\n                window.localStorage.setItem('filters', JSON.stringify(newFilters))\r\n            }\r\n        }\r\n    }\r\n\r\n    function applySearch() {\r\n        props.getMatches(`${dateFrom},${dateTo}`, filters)\r\n        setChangesMade(false)\r\n    }\r\n\r\n    function applyQuickSearch(item) {\r\n        props.getMatches('', [item])\r\n        setChangesMade(true)\r\n        props.handleNaviChange('list-ul')\r\n    }\r\n\r\n    function applyGetStandings(item) {\r\n        props.getStandings(item)\r\n        props.handleNaviChange('standings')\r\n    }\r\n\r\n    useEffect(() => {\r\n        setChangesMade(true)\r\n    }, [dateTo, dateFrom, filters]);\r\n\r\n    /*\r\n    useEffect(() => {\r\n        applySearch()\r\n    }, []);\r\n    */\r\n\r\n    return (\r\n        <div className={props.naviSelected === 'search' ? 'container': 'container not-visible'}>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='search-container'>\r\n                    {props.errorText !== '' ?\r\n                    <div className='error-info'>{props.errorText}</div>\r\n                    : <span></span>\r\n                    }\r\n                    <div className='search-container--results'>\r\n                        <Results\r\n                            changesMade={changesMade}\r\n                            numMatches={props.matches.length}\r\n                            applySearch={applySearch}\r\n                            isLoading={props.isLoading}\r\n                            loadingText={props.loadingText}\r\n                        />\r\n                    </div>\r\n                    <div className='search-container--menu'>\r\n                        <div\r\n                            className={selectedMenuItem === 'calendar' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('calendar')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'calendar'}\r\n                                definition={'AJANJAKSO'}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className={selectedMenuItem === 'search' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('search')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'search'}\r\n                                definition={'ETSI'}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className={selectedMenuItem === 'filter' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('filter')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'filter'}\r\n                                definition={'SUODATTIMET'}\r\n                            />\r\n                            <div className='search-container--menu-item-count'>\r\n                                <CountBadge count={filters.length} />\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className={selectedMenuItem === 'star' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('star')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'star'}\r\n                                definition={'SUOSIKIT'}\r\n                            />\r\n                            <div className='search-container--menu-item-count'>\r\n                                <CountBadge count={favourites.length} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='search-container--item-group'>\r\n                        <div className={selectedMenuItem === 'calendar' ? '':'not-visible'}>\r\n                            <Calendar\r\n                                dateFrom={dateFrom}\r\n                                setDateFrom={setDateFrom}\r\n                                dateTo={dateTo}\r\n                                setDateTo={setDateTo}\r\n                            />\r\n                        </div>\r\n                        <div className={selectedMenuItem === 'search' ? '':'not-visible'}>\r\n                            <SearchInput\r\n                                searchText={searchText}\r\n                                setSearchText={setSearchText}\r\n                                placeholder={'etsi sarjaa, joukkuetta, kaupunkia...'}\r\n                            />\r\n                            <List\r\n                                items={searchText === '' ? [] : searchItems.filter(item => searchText.split(' ').every(i => item.name.toLowerCase().includes(i.toLowerCase()))).slice(0,20)}\r\n                                filters={filters}\r\n                                favourites={favourites}\r\n                                handleSelection={handleSelection}\r\n                                applyQuickSearch={applyQuickSearch}\r\n                                applyGetStandings={applyGetStandings}\r\n                            />\r\n                        </div>\r\n                        <div className={selectedMenuItem === 'filter' ? '':'not-visible'}>\r\n                            {filters.length > 0 ?\r\n                            <List\r\n                                items={filters}\r\n                                filters={filters}\r\n                                favourites={favourites}\r\n                                handleSelection={handleSelection}\r\n                                applyQuickSearch={applyQuickSearch}\r\n                                applyGetStandings={applyGetStandings}\r\n                            />\r\n                            : <div></div>\r\n                            }\r\n                            \r\n                        </div>\r\n                        <div className={selectedMenuItem === 'star' ? '':'not-visible'}>\r\n                            {favourites.length > 0 ?\r\n                            <List\r\n                                items={favourites}\r\n                                filters={filters}\r\n                                favourites={favourites}\r\n                                handleSelection={handleSelection}\r\n                                applyQuickSearch={applyQuickSearch}\r\n                                applyGetStandings={applyGetStandings} \r\n                            />\r\n                            : <div></div>\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React, { useState } from 'react';\r\nimport './StandingsTableComponent.css'\r\n\r\nexport default function StandingsTable(props) {\r\n\r\n    const [selectedSort, setSelectedSort] = useState('points')\r\n    const [sortDescending, setSortDescending] = useState(true)\r\n\r\n    const standings = props.standings\r\n    const selectedGroup = props.selectedGroup\r\n\r\n    const headings = {\r\n        'played': 'O',\r\n        'wins': 'V',\r\n        'draws': 'T',\r\n        'losses': 'H',\r\n        'scored': 'TM',\r\n        'conceded': 'PM',\r\n        'difference': '+/-',\r\n        'points': 'P'\r\n    }\r\n\r\n    function sortedStandingsByGroup() {\r\n        let standingsByGroup = standings.filter(g => g.name === selectedGroup)\r\n\r\n        let data = {\r\n            'name': selectedGroup,\r\n            'standings': []\r\n        }\r\n\r\n        standingsByGroup[0].standings.sort((a,b) => {\r\n            return sortDescending ? b[selectedSort] - a[selectedSort] : a[selectedSort] - b[selectedSort]\r\n        }).map(item => {\r\n            data['standings'].push(item)\r\n        })\r\n\r\n        return [data]\r\n    }\r\n\r\n    function applySort(header) {\r\n        if (selectedSort === header) {\r\n            sortDescending ? setSortDescending(false) : setSortDescending(true)\r\n            \r\n        } else {\r\n            setSelectedSort(header)\r\n            setSortDescending(true)\r\n        }\r\n    }\r\n    return (\r\n        <div className='standingstable-component'>\r\n            {sortedStandingsByGroup().map(group =>\r\n            <div key={group.name} className='group-component'>\r\n                <table className='standings-group-table'>\r\n                    <thead>\r\n                        <tr>\r\n                            <th></th>\r\n                            <th></th>\r\n                            {Object.keys(headings).map(heading =>\r\n                                heading === selectedSort ?\r\n                                    <th onClick={() => applySort(heading)}>\r\n                                    <span>{headings[heading]} </span>\r\n                                    {sortDescending ?\r\n                                        <span>&darr;</span>\r\n                                        :\r\n                                        <span>&uarr;</span>\r\n                                    }\r\n                                    </th>\r\n                                    :\r\n                                    <th onClick={() => applySort(heading)}>\r\n                                        <span>{headings[heading]}</span>\r\n                                    </th>\r\n                                \r\n                            )}\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                    {group.standings.map(team =>\r\n                        <tr \r\n                            key={team.name}\r\n                            name={team.name}\r\n                        >\r\n                            <td>{group.standings.indexOf(team)+1}.</td>\r\n                            <td id={team.name} >{team.team}</td>\r\n                            <td>{team.played}</td>\r\n                            <td>{team.wins}</td>\r\n                            <td>{team.draws}</td>\r\n                            <td>{team.losses}</td>\r\n                            <td>{team.scored}</td>\r\n                            <td>{team.conceded}</td>\r\n                            <td>{team.difference}</td>\r\n                            <td>{team.points}</td>\r\n                        </tr>\r\n                    )}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            )}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios';\r\nimport './MatchPreviewComponent.css';\r\nimport IconDiv from './IconComponent'\r\nimport StandingsTable from './StandingsTableComponent'\r\n\r\nexport default function MatchPreview(props) {\r\n\r\n    const [showStandings, setShowStandings] = useState(false)\r\n    const [previousMatches, setPreviousMatches] = useState([])\r\n    const [standings, setStandings] = useState([])\r\n    const [matchesError, setMatchesError] = useState('')\r\n    const [standingsError, setStandingsError] = useState(false)\r\n\r\n    function getResult(team, match) {\r\n        if (match.score === '-') {\r\n            return 'no-score'\r\n        }\r\n        let homeScore = parseInt(match.score.split(' ')[0].split('-')[0])\r\n        let awayScore = parseInt(match.score.split(' ')[0].split('-')[1])\r\n        \r\n        if (homeScore === awayScore) {\r\n            return 'draw'\r\n        }\r\n        if (homeScore - awayScore > 0) {\r\n            if (team === match.home_name) {\r\n                return 'win'\r\n            } else {\r\n                return 'loss'\r\n            }\r\n        } else {\r\n            if (team === match.away_name) {\r\n                return 'win'\r\n            } else {\r\n                return 'loss'\r\n            }\r\n        }\r\n    }\r\n\r\n    function isUpcomingMatch(date) {\r\n        let y = parseInt(date.split('.')[2])\r\n        let m = parseInt(date.split('.')[1]) - 1\r\n        let d = parseInt(date.split('.')[0])\r\n\r\n        return new Date(y,m,d) > new Date() ? true : false\r\n    }\r\n\r\n    function getPreviewData(date, level, home, away) {\r\n        let data = {}\r\n\r\n        let match = props.match\r\n        let y = parseInt(match.date.split('.')[2])\r\n        let m = parseInt(match.date.split('.')[1]) - 1\r\n        let d = parseInt(match.date.split('.')[0]) - 1\r\n\r\n        data['dates'] = '2019-01-01,' + new Date(y,m,d).toJSON().split('T')[0]\r\n    \r\n        data['team'] = []\r\n        data['team'].push({ 'name': props.match.home_name + ' - ' + props.match.level })\r\n        data['team'].push({ 'name': props.match.away_name + ' - ' + props.match.level })\r\n\r\n        axios.post('/api/matches', data)\r\n        .then(res => {\r\n            if (res.data.length === 0) {\r\n                setMatchesError('Ei aiempia otteluita')\r\n            } else {\r\n                setPreviousMatches(res.data)\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.log(error)\r\n            setMatchesError('Edellisiä otteluita ei saatavilla')\r\n        })\r\n    }\r\n\r\n    function getStandings() {\r\n        if (!showStandings && !standingsError) {\r\n            setShowStandings(true)\r\n            let item = { 'type': 'team', 'name': props.match.home_name + ' - ' + props.match.level }\r\n            let data2 = {'standings': item}\r\n\r\n            axios.post('/api/standings', data2)\r\n            .then(res => {\r\n                if (res.data.length === 0) {\r\n                    setStandingsError('Sarjatilannetta ei saatavilla')\r\n                } else {\r\n                    setStandings(res.data)\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                setShowStandings(false)\r\n                setStandingsError('Sarjatilannetta ei saatavilla')\r\n            })\r\n        }   \r\n    }\r\n\r\n    useEffect(() => {\r\n        getPreviewData()\r\n    }, []);\r\n\r\n    return (\r\n        <div className='match-preview-component'>\r\n            {matchesError !== '' ?\r\n            <div>Edellisiä otteluita ei saatavilla</div>\r\n            :\r\n            <div className='match-preview-component-matchdiv'>\r\n            <div className='match-preview-component-icon'>\r\n                <div className={previousMatches.length === 0 ? 'loader':''}>\r\n                    <IconDiv \r\n                        icon={'history'}\r\n                        definition={'EDELLISET OTTELUT'}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <div className='match-preview-component--last-matches'>\r\n                    <div className='match-preview-component--last-matches-home'>\r\n                        <ul>\r\n                            {previousMatches.filter(m => (m.home_name === props.match.home_name || m.away_name === props.match.home_name)).reverse().map(match =>\r\n                                <li\r\n                                    key={match['id']}\r\n                                >\r\n                                    <div className='match-preview-component--last-matches-team-home'>\r\n                                        <span className={match.home_name === props.match.home_name ? 'selected':''}>{match.home_name}</span>\r\n                                    </div>\r\n                                    {isUpcomingMatch(match.date) ?\r\n                                    <div className='match-preview-component--last-matches-date'>\r\n                                        {match.date}\r\n                                    </div>\r\n                                    :\r\n                                    <div className='match-preview-component--last-matches-score'>\r\n                                        <span className={'match-preview-component--last-matches-score-'+getResult(props.match.home_name, match)}>\r\n                                            {match.score.split(' ')[0]}\r\n                                        </span>\r\n                                    </div>\r\n                                    }\r\n                                    <div className='match-preview-component--last-matches-team-away'>\r\n                                        <span className={match.away_name === props.match.home_name ? 'selected':''}>{match.away_name}</span>\r\n                                    </div>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                    <div className='match-preview-component--last-matches-away'>\r\n                        <ul>\r\n                            {previousMatches.filter(m => (m.home_name === props.match.away_name || m.away_name === props.match.away_name)).reverse().map(match =>\r\n                                <li\r\n                                    key={match['id']}\r\n                                >\r\n                                    <div className='match-preview-component--last-matches-team-home'>\r\n                                        <span className={match.home_name === props.match.away_name ? 'selected':''}>{match.home_name}</span>\r\n                                    </div>\r\n                                    {isUpcomingMatch(match.date) ?\r\n                                    <div className='match-preview-component--last-matches-date'>\r\n                                        {match.date}\r\n                                    </div>\r\n                                    :\r\n                                    <div className='match-preview-component--last-matches-score'>\r\n                                        <span className={'match-preview-component--last-matches-score-'+getResult(props.match.away_name, match)}>\r\n                                            {match.score.split(' ')[0]}\r\n                                        </span>\r\n                                    </div>\r\n                                    }\r\n                                    <div className='match-preview-component--last-matches-team-away'>\r\n                                        <span className={match.away_name === props.match.away_name ? 'selected':''}>{match.away_name}</span>\r\n                                    </div>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            }\r\n            <div\r\n                className='match-preview-component-icon'\r\n                onClick={() => getStandings()}\r\n            >\r\n                <div className={(standings.length === 0 && showStandings) ? 'loader':''}>\r\n                    <IconDiv \r\n                        icon={'trophy'}\r\n                        definition={(showStandings || standingsError) ? 'SARJATILANNE':'NÄYTÄ SARJATILANNE'}\r\n                    />\r\n                </div>\r\n            </div>\r\n            {standingsError ?\r\n            <div>Sarjatilannetta ei saatavilla</div>\r\n            :\r\n            standings.length > 0 ?\r\n            <StandingsTable\r\n                standings={standings}\r\n                selectedGroup={standings[0].name}\r\n            />\r\n            : <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport './MatchListItemsComponent.css';\r\nimport CountBadge from './CountBadgeComponent'\r\nimport MatchPreview from './MatchPreviewComponent'\r\n\r\nexport default function MatchListItems(props) {\r\n\r\n    const [itemIsOpen, setItemIsOpen] = useState(props.itemIsOpen)\r\n    const [selectedMatches, setSelectedMatches] = useState([])\r\n    \r\n    function selectMatch(id) {\r\n        if (selectedMatches.includes(id)) { \r\n            setSelectedMatches([...selectedMatches].filter(x => x !== id))\r\n        } else {\r\n            setSelectedMatches([...selectedMatches, id])\r\n        }\r\n    }\r\n\r\n    function displayVenue(venue) {\r\n        let city = props.matches.filter(m => m.venue_name === venue)[0].city\r\n        \r\n        if (venue.includes(city)) {\r\n            return venue\r\n        }\r\n        return venue + ', ' + city\r\n    }\r\n\r\n    function isUpcomingMatch(date) {\r\n        let year = parseInt(date.split('.')[2])\r\n        let month = parseInt(date.split('.')[1]) - 1\r\n        let day = parseInt(date.split('.')[0])\r\n        let matchDate = new Date(year,month,day)\r\n\r\n        let tyear = new Date().getFullYear()\r\n        let tmonth = new Date().getMonth()\r\n        let tday = new Date().getDate()\r\n        let today = new Date(tyear,tmonth,tday)\r\n\r\n        if (matchDate >= today) {\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className='matchlist-component'>\r\n            <div\r\n                className='matchlist-component--header'\r\n                onClick={() => setItemIsOpen(!itemIsOpen)}\r\n            >\r\n                <div className='matchlist-component--header-name'>\r\n                    <span>{props.groupbyItem === 'venue_name' ? displayVenue(props.header) : props.header}</span>\r\n                    <span className='matchlist-component--header-count'><CountBadge count={props.matches.length} /></span>\r\n                </div>\r\n                <div><i className={itemIsOpen ? 'arrow-up':'arrow-down'}></i></div>\r\n            </div>\r\n            {itemIsOpen ? \r\n            props.matches.map(match =>\r\n                <div \r\n                    key={match['_id']}\r\n                    className='matchlist-component--match-details'\r\n                >\r\n                    <div className='matchlist-component--match-details--whenwhere'>\r\n                        \r\n                            {props.groupbyItem !== 'date' ?\r\n                            <div className='matchlist-component--match-details-date'>\r\n                                <span><i className=\"far fa-calendar\"></i></span>\r\n                                <span>{match.date}</span>\r\n                            </div>\r\n                            : <span></span>\r\n                            }\r\n                            <div className='matchlist-component--match-details-time'>\r\n                                <span><i className=\"far fa-clock\"></i></span>\r\n                                <span>{match.time}</span>\r\n                            </div>\r\n                            {props.groupbyItem !== 'venue_name' ?\r\n                            <div\r\n                                className='matchlist-component--match-details-venue'\r\n                            >\r\n                                <span><i className=\"fas fa-map-marker-alt\"></i></span>\r\n                                <span>\r\n                                {props.groupbyItem === 'city' ?\r\n                                    match.venue_name\r\n                                    :\r\n                                    displayVenue(match.venue_name)\r\n                                }\r\n                                </span>\r\n                            </div>\r\n                            : <span></span>\r\n                            }\r\n                            {!['city','venue_name'].includes(props.groupbyItem) ?\r\n                            <span\r\n                                className='matchlist-component--match-details-city'\r\n                            ></span>\r\n                            : <span></span>\r\n                            }\r\n                    </div>\r\n                    <div className='matchlist-component--match-details--who'>\r\n                        {props.groupbyItem !== 'level' ?\r\n                        <div className='matchlist-component--match-details-level'>\r\n                            <span><i className=\"fas fa-trophy\"></i></span>\r\n                            <span>{match.level}</span>\r\n                        </div>\r\n                        : <span></span>\r\n                        }\r\n                        <div className='matchlist-component--match-details-team-info'>\r\n                            <div className='matchlist-component--match-details-home'>\r\n                                <span>{match.home_name}</span>\r\n                            </div>\r\n                            <div\r\n                                className='matchlist-component--match-details-score'\r\n                            >{match.score}</div>\r\n                            <div\r\n                                className='matchlist-component--match-details-away'\r\n                            >{match.away_name}</div>\r\n                        </div>\r\n                    </div>\r\n                    {isUpcomingMatch(match.date) ?\r\n                    <div className='matchlist-component--match-preview'>\r\n                    <div \r\n                        className='matchlist-component--match-preview-btn'\r\n                        onClick={() => selectMatch(match['_id'])}\r\n                    >\r\n                        <span>Ottelun asetelmat</span>\r\n                        <span><i className={selectedMatches.includes(match['_id']) ? 'arrow-up':'arrow-down'}></i></span>\r\n                    </div>\r\n                        {selectedMatches.includes(match['_id']) ?\r\n                        <div className='matchlist-component--match-preview-content'>\r\n                            <MatchPreview\r\n                                match={match}\r\n                            />\r\n                        </div>\r\n                        :\r\n                        <span></span>\r\n                        }\r\n                    </div>\r\n                    : <span></span>\r\n                    }\r\n                    <div></div>\r\n                </div>)\r\n            : <div></div>\r\n            }\r\n\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport './MatchListContainer.css';\r\nimport MatchListItems from './components/MatchListItemsComponent';\r\n\r\nexport default function MatchList(props) {\r\n\r\n    const [groupbyItem, setGroupByItem] = useState('date')\r\n\r\n    let groupbySet = new Set([])\r\n    props.matches.map(match => {\r\n        groupbySet.add(match[groupbyItem])\r\n    })\r\n\r\n    function sortedGroupbySet() {\r\n        return groupbyItem === 'date' ? Array.from(groupbySet) : Array.from(groupbySet).sort()\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='matchlist-container'>\r\n                    <div className='matchlist-container--grouping'>\r\n                        <form>\r\n                            <label> {'Ryhmittely: '}\r\n                                <select\r\n                                    value={groupbyItem}\r\n                                    onChange={(e) => setGroupByItem(e.target.value)}\r\n                                >\r\n                                    <option value=\"date\">Päivämäärä</option>\r\n                                    <option value=\"level\">Sarjataso</option>\r\n                                    <option value=\"city\">Kaupunki</option>\r\n                                    <option value=\"venue_name\">Kenttä</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                    </div>\r\n                    <div className='matchlist-container--matchlist-items'>\r\n                    {sortedGroupbySet().map((header, index) =>\r\n                        <MatchListItems\r\n                            key={header}\r\n                            header={header}\r\n                            groupbyItem={groupbyItem}\r\n                            matches={props.matches.filter(m => m[groupbyItem] === header)}\r\n                            itemIsOpen={index === 0 ? true : false}\r\n                        />\r\n                    )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './LocationPopupContainer.css';\r\nimport MatchListItems from './components/MatchListItemsComponent'\r\nimport IconDiv from './components/IconComponent'\r\n\r\nexport default function LocationPopup(props) {\r\n\r\n    const location = {...props.selectedLocation}\r\n\r\n    function getVenues() {\r\n        let venues = new Set([])\r\n        props.matches.map(m => {\r\n            venues.add(m.venue_name)\r\n        })\r\n        return Array.from(venues)\r\n    }\r\n\r\n    function getDirections(lat,lon) {\r\n        let url = `https://www.google.fi/maps/dir//${lat},${lon}/@${lat},${lon},11z`\r\n        return url\r\n    }\r\n\r\n    /*\r\n    {getVenues(location._id).map(venue =>\r\n                    <MatchListItems \r\n                        key={venue}\r\n                        onMap={false}\r\n                        header={venue}\r\n                        groupbyItem={'venue_name'}\r\n                        matches={props.matches.filter(match => match.venue_name === venue)}\r\n                    />\r\n                    )}\r\n    */\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div className='locationpopup-container'>\r\n                    <div\r\n                        className='close-btn'\r\n                        onClick={() => props.setShowPopup(false)}\r\n                    >X</div>\r\n                    <div className='location-address-bar'>\r\n                        <div>\r\n                            <div className='location-address'>\r\n                                {location.address}\r\n                            </div>\r\n                            <div className='location-address-city'>\r\n                                {location.postalcode} {location.city}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className='location-directions'\r\n                            onClick={() => window.open(getDirections(location.lat,location.lon))}\r\n                        >\r\n                            <IconDiv \r\n                                icon={'directions'}\r\n                                definition={'REITTIOHJE'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {getVenues().map(venue =>\r\n                        <MatchListItems \r\n                            key={venue}\r\n                            header={venue}\r\n                            groupbyItem={'venue_name'}\r\n                            matches={props.matches.filter(match => match.venue_name === venue)}\r\n                            itemIsOpen={true}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport './LocateContainer.css'\r\nimport './components/ListComponent'\r\nimport SearchInput from './components/SearchInputComponent'\r\n\r\nexport default function Locate(props) {\r\n\r\n    const [searchText, setSearchText] = useState('')\r\n\r\n    let cities = [...props.cities]\r\n    cities.unshift({'type': 'city', 'name': 'Suomi'})\r\n\r\n    function handleSelect(city) {\r\n        props.handleMapCenterChange(city)\r\n        props.handleNaviChange('map')\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='locate-components'>\r\n                    <div className='locate-components--search'>\r\n                        <SearchInput\r\n                            searchText={searchText}\r\n                            setSearchText={setSearchText}\r\n                            placeholder={'etsi kaupunki...'}\r\n                        />\r\n                    </div>\r\n                    <div className='city-list'>\r\n                        <ul>\r\n                            {cities.filter(c => c.name.toLowerCase().includes(searchText.toLowerCase())).map(city =>\r\n                                <li\r\n                                    key={city.name}\r\n                                >\r\n                                    <span onClick={() => handleSelect(city)}>\r\n                                        {city.name}\r\n                                    </span>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './StandingsContainer.css'\r\nimport './components/StandingsTableComponent'\r\nimport StandingsTable from './components/StandingsTableComponent';\r\n\r\nexport default function Standings(props) {\r\n\r\n    const standings = [...props.standings]\r\n    let initialSelectedGroup\r\n    try {\r\n        initialSelectedGroup = standings[0].name\r\n    } catch {\r\n        initialSelectedGroup = 'Ongelma haettaessa sarjatilannetta'\r\n    }\r\n\r\n    const [selectedGroup, setSelectedGroup] = useState(initialSelectedGroup)\r\n\r\n    const groups = standings.map(group => {return group.name})\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('search')}\r\n                >X</div>\r\n                <div className='standings-container'>\r\n                    <h3>Sarjatilanne: {props.selectedStandings.name}</h3>\r\n                    {groups.length > 1 ?\r\n                        <form>\r\n                            <select\r\n                                value={selectedGroup}\r\n                                onChange={(e) => setSelectedGroup(e.target.value)}\r\n                            >\r\n                                {groups.map(group =>\r\n                                    <option value={group}>{group}</option>\r\n                                )}\r\n                            </select>\r\n                        </form>\r\n                        :\r\n                        groups[0] !== 'Sarja' ?\r\n                        <span>{groups[0]}</span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                    <div className='standings-container--table'>\r\n                        <StandingsTable\r\n                            standings={standings}\r\n                            selectedGroup={selectedGroup}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './LoadingContainer.css'\r\n\r\nexport default function Loading(props) {\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div className='loading-container'>\r\n                    <div className='loader'>{props.loadingText}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Map from './containers/MapContainer'\nimport Navi from './containers/NaviContainer'\nimport Info from './containers/InfoContainer'\nimport Search from './containers/SearchContainer';\nimport MatchList from './containers/MatchListContainer'\nimport LocationPopup from './containers/LocationPopupContainer'\nimport Locate from './containers/LocateContainer';\nimport Standings from './containers/StandingsContainer'\nimport Loading from './containers/LoadingContainer'\n\nfunction App() {\n\n  const [mapCenter, setMapCenter] = useState({'city': 'Suomi', 'lat': 63, 'lon': 25});\n  const [showPopup, setShowPopup] = useState(false)\n  const [selectedLocation, setSeletedLocation] = useState({})\n  const [naviSelected, setNaviSelected] = useState('search');\n  const [teams, setTeams] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [standings, setStandings] = useState([]);\n  const [selectedStandings, setSelectedStandings] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState('')\n  const [errorText, setErrorText] = useState('')\n  const [DBinfo, setDBinfo] = useState({})\n\n  function handleNaviChange(item) {\n    setNaviSelected(item)\n  }\n\n  function handleLocationPopup(item) {\n    setSeletedLocation(item)\n    setShowPopup(true)\n  }\n\n  function handleMapCenterChange(item) {\n\n    if (item.name === 'Suomi') {\n      setMapCenter({'city': 'Suomi', 'lat': 63, 'lon': 25})\n    } else {\n      let city = { 'city': {...item}}\n\n      axios.post('/api/citycoordinates', city)\n      .then(res => {\n        setMapCenter(res.data[0])\n      })\n      .catch(error => console.log(error))\n      }\n  }\n\n  function getData(name) {\n    axios.get('api/'+name)\n    .then(res => {\n      if (name === 'teams') {\n        setTeams(res.data.filter(team => team.name.charAt(0) > '9'))\n      }\n      if (name === 'cities') {\n        setCities(res.data.filter(city => city.name !== null))\n      }\n      if (name === 'levels') {\n        setLevels(res.data)\n      }\n      if (name === 'info') {\n        setDBinfo(res.data[0])\n      }\n    })\n    .catch(error => console.log(error))\n  }\n\n  function getMatches(dates, filters) {\n    setIsLoading(true)\n    setLoadingText('Haetaan otteluita...')\n\n    let data = {}\n\n    if (dates !== '') {\n      data['dates'] = dates\n    }\n    if (filters.length > 0) {\n      filters.map(filter => {\n        data[filter.type] = []\n        data[filter.type].push({ \"name\": filter.name })\n      })\n    }\n\n    axios.post('/api/matches', data)\n    .then(res => {\n      setMatches(res.data)\n      let locIds = new Set([])\n      res.data.map(m => locIds.add(m.location_id))\n      return Array.from(locIds)\n    })\n    .then(ids => {\n      if (ids.length > 0) {\n        axios.get('/api/locations?ids='+ids.join(','))\n        .then(r => {\n          setLocations(r.data)\n          console.log(r.data.length)\n        })\n        .catch(error => console.log(error))\n      } else {\n        setLocations([])\n        setMatches([])\n      }\n    })\n    .then(() => {\n      setIsLoading(false)\n      setLoadingText('')\n    })\n    .catch(error => {\n      console.log(error)\n      setIsLoading(false)\n      setLoadingText('')\n      setErrorText('Ongelma ilmeni haettaessa otteluita.')\n      setTimeout(() => setErrorText(''), 6000)\n    })\n  }\n\n  function getStandings(item) {\n    setStandings([])\n    setIsLoading(true)\n\n    setLoadingText('Haetaan sarjatilannetta...')\n\n    let standings = {'standings': item}\n\n    axios.post('/api/standings', standings)\n    .then(res => {\n      console.log(res.data)\n      setStandings(res.data)\n      setSelectedStandings(item)\n    })\n    .then(() => {\n      setIsLoading(false)\n      setLoadingText('')\n    })\n    .catch(error => {\n      console.log(error)\n      handleNaviChange('search')\n      setIsLoading(false)\n      setLoadingText('')\n      setErrorText('Ongelma ilmeni haettaessa sarjatilannetta.')\n      setTimeout(() => setErrorText(''), 6000)\n    })\n  }\n\n  useEffect(() => {\n    getData('cities')\n    getData('levels')\n    getData('teams')\n    getData('info')\n  }, []);\n  \n\n  return (\n    <div className=\"App\">\n\n      <Map\n        mapCenter={mapCenter}\n        locations={locations}\n        matches={matches}\n        handleLocationPopup={handleLocationPopup}\n      />\n\n      {showPopup ?\n      <LocationPopup\n          setShowPopup={setShowPopup}\n          selectedLocation={selectedLocation}\n          matches={matches.filter(match => match.location_id === selectedLocation._id)}\n      /> : <div></div>\n      }\n\n      <Navi\n        naviSelected={naviSelected}\n        handleNaviChange={handleNaviChange}\n        numMatches={matches.length}\n      />\n\n      {naviSelected === 'eye' ?\n      <Locate \n        cities={cities}\n        handleMapCenterChange={handleMapCenterChange}\n        handleNaviChange={handleNaviChange}\n      /> : <div></div>}\n\n      <Search\n        naviSelected={naviSelected}\n        teams={teams}\n        cities={cities}\n        levels={levels}\n        matches={matches}\n        getMatches={getMatches}\n        handleNaviChange={handleNaviChange}\n        getStandings={getStandings}\n        isLoading={isLoading}\n        loadingText={loadingText}\n        errorText={errorText}\n      />\n\n      {naviSelected === 'info' ?\n      <Info\n        handleNaviChange={handleNaviChange}\n        DBinfo={DBinfo}\n      /> : <div></div>\n      }\n\n      {naviSelected === 'list-ul' ?\n        isLoading ?\n        <Loading loadingText={loadingText} />\n        :\n        matches.length === 0 ?\n        handleNaviChange('search')\n        :\n        <MatchList\n          matches={matches}\n          handleNaviChange={handleNaviChange}\n        />\n      : <div></div>\n      }\n\n      {naviSelected === 'standings' ?\n        isLoading ?\n        <Loading loadingText={loadingText} />\n        :\n        <Standings\n          standings={standings}\n          selectedStandings={selectedStandings}\n          handleNaviChange={handleNaviChange}\n        />\n      : <div></div>\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}