{"version":3,"sources":["containers/MapContainer.js","containers/NaviContainer.js","containers/InfoContainer.js","containers/components/IconComponent.js","containers/components/CalendarComponent.js","containers/components/CountBadgeComponent.js","containers/components/SearchInputComponent.js","containers/components/ListItemComponent.js","containers/components/ListComponent.js","containers/components/ResultsComponent.js","containers/SearchContainer.js","containers/components/MatchListItemsComponent.js","containers/MatchListContainer.js","containers/LocationPopupContainer.js","containers/LocateContainer.js","containers/StandingsContainer.js","containers/LoadingContainer.js","App.js","serviceWorker.js","index.js"],"names":["Map","props","zoom","mapCenter","city","className","rel","href","center","lat","lon","attributionControl","zoomControl","doubleClickZoom","scrollWheelZoom","dragging","animate","easeLinearity","TileLayer","url","locations","map","location","Marker","key","_id","position","opacity","onclick","handleLocationPopup","Popup","ZoomControl","L","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","require","iconUrl","shadowUrl","Navi","naviItems","Object","keys","item","numMatches","onClick","handleNaviChange","naviSelected","Info","target","DBinfo","updated","date","year","split","month","parseInt","displayDate","IconDiv","icon","definition","Calendar","today","Date","toJSON","useState","showCalendar","setShowCalendar","dateRangeOption","handleCalClick","day","getTime","from","dateFrom","to","dateTo","setDateFrom","setDateTo","isOtherMonth","useEffect","document","getElementById","slice","join","scrollIntoView","behavior","block","years","calData","yearData","toString","monthDays","thisMonth","thisYear","daysInMonth","getDate","startDay","getDay","endDay","data","i","theDay","theMonth","getMonth","theYear","getFullYear","push","cal","j","length","getCalforMonth","getCalData","table","id","week","isBetweenSelected","isOtherYear","value","onChange","e","tDay","setDate","nwMonday","nwSunday","tday","lastDayOfMonth","nmFirstday","nmLastDay","tyLastDay","handleDateRangeOption","CountBadge","count","SearchInput","type","searchText","placeholder","setSearchText","ListItem","selectionOpen","setSelectionOpen","name","favourites","filter","fav","handleSelection","filters","fil","applyQuickSearch","includes","applyGetStandings","List","items","Results","info","isLoading","loadingText","changesMade","applySearch","Search","selectedMenuItem","setSelectedMenuItem","JSON","parse","window","localStorage","getItem","setFilters","setFavourites","setChangesMade","searchItems","cities","levels","teams","group","newFavourites","setItem","stringify","newFilters","getMatches","getStandings","errorText","matches","every","toLowerCase","MatchListItems","itemIsOpen","setItemIsOpen","displayVenue","venue","m","venue_name","console","log","groupbyItem","header","match","time","level","home_name","score","away_name","MatchList","setGroupByItem","groupbySet","Set","add","Array","sort","index","LocationPopup","selectedLocation","setShowPopup","address","postalcode","open","venues","getVenues","Locate","unshift","c","handleMapCenterChange","handleSelect","Standings","initialSelectedGroup","standings","selectedGroup","setSelectedGroup","selectedSort","setSelectedSort","sortDescending","setSortDescending","groups","headings","applySort","selectedStandings","standingsByGroup","g","a","b","sortedStandingsByGroup","heading","team","indexOf","played","wins","draws","losses","scored","conceded","difference","points","Loading","App","setMapCenter","showPopup","setSeletedLocation","setNaviSelected","setTeams","setCities","setLevels","setMatches","setLocations","setStandings","setSelectedStandings","setIsLoading","setLoadingText","setErrorText","setDBinfo","getData","axios","get","then","res","charAt","catch","error","location_id","post","dates","locIds","ids","r","setTimeout","Boolean","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.b5caf341.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport { Map as LeafletMap, TileLayer, Marker, Popup, ZoomControl } from 'react-leaflet';\r\nimport L from 'leaflet';\r\nimport './MapContainer.css';\r\n\r\ndelete L.Icon.Default.prototype._getIconUrl;\r\n\r\nL.Icon.Default.mergeOptions({\r\n    iconRetinaUrl: require('leaflet/dist/images/marker-icon-2x.png'),\r\n    iconUrl: require('leaflet/dist/images/marker-icon.png'),\r\n    shadowUrl: require('leaflet/dist/images/marker-shadow.png')\r\n});\r\n\r\nexport default function Map(props) {\r\n\r\n    let zoom = 6\r\n\r\n    if (props.mapCenter.city !== 'Suomi') {\r\n        zoom = 11\r\n    }\r\n    \r\n    return (\r\n        <div className='map-container'>\r\n            <link rel=\"stylesheet\" href=\"//cdnjs.cloudflare.com/ajax/libs/leaflet/1.3.1/leaflet.css\" />\r\n            <LeafletMap\r\n                center={[props.mapCenter.lat, props.mapCenter.lon]}\r\n                zoom={zoom}\r\n                attributionControl={true}\r\n                zoomControl={false}\r\n                doubleClickZoom={true}\r\n                scrollWheelZoom={true}\r\n                dragging={true}\r\n                animate={true}\r\n                easeLinearity={0.35}\r\n            >\r\n                <TileLayer\r\n                url='http://{s}.tile.osm.org/{z}/{x}/{y}.png'\r\n                />\r\n                {props.locations.map(location =>\r\n                <Marker\r\n                    key={location._id}\r\n                    position={[location.lat,location.lon]}\r\n                    opacity={0.9}\r\n                    onclick={() => props.handleLocationPopup(location)}\r\n                >\r\n                    <Popup>\r\n                        {' '}\r\n                    </Popup>\r\n                </Marker>\r\n                )}\r\n                <ZoomControl position='bottomright' />\r\n            </LeafletMap>\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './NaviContainer.css';\r\n\r\nexport default function Navi(props) {\r\n    const naviItems = {\r\n        'info': 'INFO',\r\n        'search': 'HAKU',\r\n        'eye': 'KOHDISTUS',\r\n        'map': 'KARTTA',\r\n        'list-ul': 'OTTELUT'\r\n    }\r\n    return (\r\n        <div className='navi-container'>\r\n            <div className='navi-box'>\r\n                <ul>\r\n                    {Object.keys(naviItems).map(item =>\r\n                    (props.numMatches === 0 && item === 'list-ul') ?\r\n                    <li\r\n                        key={item}\r\n                    >\r\n                        <span className='navi-item-disabled'>\r\n                        <i className={\"fas fa-\"+item}></i>\r\n                        <span className='navi-definition'>{naviItems[item]}</span>\r\n                        </span>\r\n                    </li>\r\n                    :\r\n                    <li\r\n                        key={item}\r\n                        onClick={() => props.handleNaviChange(item)}\r\n                    >\r\n                        <span className={props.naviSelected === item ? 'navi-item-selected':'navi-item'}>\r\n                        <i className={\"fas fa-\"+item}></i>\r\n                        <span className='navi-definition'>{naviItems[item]}</span>\r\n                        </span>\r\n                    </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './InfoContainer.css'\r\n\r\nexport default function Info(props) {\r\n\r\n    function displayDate(date) {\r\n        let year = date.split('-')[0]\r\n        let month = parseInt(date.split('-')[1])\r\n        let day = parseInt(date.split('-')[2])\r\n        return day + '.' + month + '.' + year\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='info-container'>\r\n                    <div><h3>missä pelaa?</h3></div>\r\n                    <div>\r\n                        \"Jalkapallo-ottelut helposti kartalle.\"\r\n                    </div>\r\n                    <div>\r\n                        Ottelu-, lokaatio- ja sarjatilannetiedot on kerätty Suomen Palloliiton \r\n                        sivuilta <a href='https://www.palloliitto.fi' target='_blank'>(www.palloliitto.fi)</a>.                   \r\n                    </div>\r\n                    <div className='info-container--details'>\r\n                        {props.DBinfo.updated ?\r\n                        <span>Ottelutietokanta päivitetty: {displayDate(props.DBinfo.updated)}</span>\r\n                        :\r\n                        <span></span>\r\n                        }\r\n                        <span>{'Sovelluksen lähdekoodi: '}\r\n                            <a href='https://www.github.com/kaagla/match-locator' target='_blank'>\r\n                                <i className=\"fab fa-github\"></i>\r\n                            </a></span>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './IconComponent.css';\r\n\r\nexport default function IconDiv(props) {\r\n    return (\r\n        <div className='icon-component'>\r\n            <div>\r\n                <i className={\"fas fa-\"+props.icon}></i>\r\n            </div>\r\n            <div className='icon-component--definition'>\r\n                {props.definition}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './CalendarComponent.css'\r\n\r\nexport default function Calendar(props) {\r\n\r\n    const today = new Date().toJSON().split('T')[0]\r\n\r\n    //const [dateFrom, setDateFrom] = useState(today)\r\n    //const [dateTo, setDateTo] = useState(today)\r\n    const [showCalendar, setShowCalendar] = useState(false)\r\n    const [dateRangeOption, setDateRangeOption] = useState('')\r\n\r\n    function getCalData(years) {\r\n        let calData = []\r\n        years.map(year => {\r\n\r\n            [1,2,3,4,5,6,7,8,9,10,11,12].map(month => {\r\n                let yearData = {'year': year, 'month': month <= 9 ? '0'+month : month.toString()}\r\n                yearData.monthDays = getCalforMonth(month, year)\r\n                calData.push(yearData)\r\n            })\r\n            \r\n        })\r\n        return calData\r\n    }\r\n\r\n    function getCalforMonth(month, year) {\r\n        let thisMonth =  month -1\r\n        let thisYear = year\r\n        let daysInMonth = new Date(thisYear, thisMonth+1, 0).getDate()\r\n        \r\n        let startDay = -(new Date(thisYear, thisMonth, 1).getDay() - 2)\r\n\r\n        if (new Date(thisYear, thisMonth, 1).getDay() === 0) {\r\n            startDay = -5\r\n        }\r\n\r\n        let endDay = daysInMonth + (7 - new Date(thisYear, thisMonth, daysInMonth).getDay())\r\n        let data = []\r\n\r\n        for (let i = startDay; i <= endDay; i++) {\r\n            let theDay = new Date(thisYear, thisMonth, i)\r\n            let day = theDay.getDate()\r\n            day = day <= 9 ? '0'+day : day\r\n            let weekDay = theDay.getDay()\r\n            let theMonth = theDay.getMonth() + 1\r\n            theMonth = theMonth <= 9 ? '0'+theMonth : theMonth\r\n            let theYear = theDay.getFullYear()\r\n            \r\n            data.push({\r\n                'date': theYear + '-' + theMonth + '-' + day\r\n            })\r\n        }\r\n\r\n        let cal = []\r\n        for (let j = 0; j < (data.length/7); j++) {\r\n            cal.push(data.slice(j*7, (j+1)*7))\r\n        }\r\n        return cal\r\n    }\r\n\r\n    const isThisDay = (day) => {\r\n        let getToday = new Date()\r\n        let today = getToday.getFullYear() + '-' + (getToday.getMonth()+1) + '-' + getToday.getDate()\r\n\r\n        return day === today ? true : false\r\n    }\r\n\r\n    function handleCalClick(item) {\r\n        let day = new Date(item).getTime()\r\n        let from = new Date(props.dateFrom).getTime()\r\n        let to = new Date(props.dateTo).getTime()\r\n\r\n        if (day < from || from !== to) {\r\n            props.setDateFrom(item)\r\n            props.setDateTo(item)\r\n        } else if (from === to) {\r\n            props.setDateTo(item)\r\n        }\r\n    }\r\n\r\n    function isBetweenSelected(day) {\r\n        if (props.dateTo === null) {\r\n            if (day === props.dateFrom) {\r\n                return true\r\n            }\r\n        } else {\r\n            if (day >= props.dateFrom && day <= props.dateTo) {\r\n                return true\r\n            }\r\n        }\r\n        return false\r\n    }\r\n\r\n    function isOtherMonth(day, month) {\r\n        return parseInt(day.split('-')[1]) !== parseInt(month) ? true : false\r\n    }\r\n\r\n    function isOtherYear(day, year) {\r\n        return parseInt(day.split('-')[0]) !== parseInt(year) ? true : false\r\n    }\r\n\r\n    function handleDateRangeOption(value) {\r\n        if (value === 'today') {\r\n            props.setDateFrom(today)\r\n            props.setDateTo(today)\r\n        }\r\n        if (value === 'this-week') {\r\n            let tDay = new Date()\r\n            props.setDateFrom(today)\r\n            if (tDay.getDay() !== 0) {\r\n               props.setDateTo(new Date(tDay.setDate(tDay.getDate() + (7 - new Date().getDay()))).toJSON().split('T')[0])\r\n            } else {\r\n                props.setDateTo(today)\r\n            }\r\n        }\r\n        if (value === 'next-week') {\r\n            let nwMonday = new Date(new Date().setDate(new Date().getDate() + (8 - new Date().getDay())))\r\n            let nwSunday = new Date(nwMonday)\r\n            nwSunday.setDate(nwSunday.getDate() + 6)\r\n            props.setDateFrom(nwMonday.toJSON().split('T')[0])\r\n            props.setDateTo(nwSunday.toJSON().split('T')[0])\r\n        }\r\n        if (value === 'this-month') {\r\n            props.setDateFrom(today)\r\n            let tday = new Date(today)\r\n            let lastDayOfMonth = new Date(tday.setDate(32))\r\n            lastDayOfMonth = new Date(tday.setDate(0)).toJSON().split('T')[0]\r\n            props.setDateTo(lastDayOfMonth)\r\n        }\r\n        if (value === 'next-month') {\r\n            let nmFirstday = new Date(new Date().setDate(32)).toJSON().split('T')[0]\r\n            let nmLastDay = new Date(new Date(new Date().setDate(64)).setDate(0)).toJSON().split('T')[0]\r\n            props.setDateFrom(nmFirstday)\r\n            props.setDateTo(nmLastDay)\r\n        }\r\n        if (value === 'this-year') {\r\n            let tyLastDay = new Date(new Date().getFullYear(), 11, 32).toJSON().split('T')[0]\r\n            props.setDateFrom(today)\r\n            props.setDateTo(tyLastDay)\r\n        }\r\n    }\r\n\r\n    function displayMonth(month) {\r\n        const names = {\r\n            '01': 'tammikuu',\r\n            '02': 'helmikuu',\r\n            '03': 'maaliskuu',\r\n            '04': 'huhtikuu',\r\n            '05': 'toukokuu',\r\n            '06': 'kesäkuu',\r\n            '07': 'heinäkuu',\r\n            '08': 'elokuu',\r\n            '09': 'syyskuu',\r\n            '10': 'lokakuu',\r\n            '11': 'marraskuu',\r\n            '12': 'joulukuu'\r\n        }\r\n        return names[month]\r\n    }\r\n\r\n    function displayDate(date) {\r\n        let year = date.split('-')[0]\r\n        let month = parseInt(date.split('-')[1])\r\n        let day = parseInt(date.split('-')[2])\r\n        if (year === 2020) {\r\n          return day + '.' + month + '.' + year\r\n        } else {\r\n          return day + '.' + month + '.'\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        \r\n        document.getElementById(props.dateTo.split('-').slice(0,2).join('-')).scrollIntoView({behavior: \"auto\", block: \"center\"})           \r\n        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        \r\n        document.getElementById(props.dateTo.split('-').slice(0,2).join('-')).scrollIntoView({behavior: \"smooth\", block: \"center\"})          \r\n        \r\n    }, [props.dateTo]);\r\n\r\n    return (\r\n        <div className='calendar-container'>\r\n            <div className='calendar-component'>\r\n                <div\r\n                    className='calendar-component--display'\r\n                    onClick={() => setShowCalendar(!showCalendar)}\r\n                >\r\n                    {props.dateFrom === props.dateTo ?\r\n                    \r\n                    <div>\r\n                        {displayDate(props.dateFrom)}\r\n                    </div>\r\n                    \r\n                    :\r\n                    <div>\r\n                        <span>{displayDate(props.dateFrom)}</span>\r\n                        <span> &rarr; </span>\r\n                        <span>{displayDate(props.dateTo)}</span>\r\n                    </div>\r\n                    }\r\n                </div>\r\n                <div className='calendar-component--tables'>\r\n                <div className='calendar-component--table-headings'>\r\n                    <table>\r\n                        <tr>\r\n                            <th>MA</th>\r\n                            <th>TI</th>\r\n                            <th>KE</th>\r\n                            <th>TO</th>\r\n                            <th>PE</th>\r\n                            <th>LA</th>\r\n                            <th>SU</th>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                {getCalData([2019,2020,2021]).map(table =>\r\n                <div\r\n                    className='calendar-component--month'\r\n                    key={table.year+'-'+table.month}\r\n                    id={table.year+'-'+table.month}\r\n                >\r\n                    <h5>{displayMonth(table.month) + ' ' + table.year}</h5>\r\n                    <table>\r\n                        \r\n                        {table.monthDays.map(week =>\r\n                        <tr>\r\n                            {week.map(day =>\r\n                            isBetweenSelected(day.date) && !isOtherMonth(day.date, table.month) ?\r\n                            day.date === props.dateFrom || day.date === props.dateTo ?\r\n                            <td \r\n                                className='calendar-component--item-selected'\r\n                                onClick={() => handleCalClick(day.date)}\r\n                            >\r\n                                \r\n                                {day.date.split('-')[2]}\r\n                            </td>\r\n                            :\r\n                            <td \r\n                                className='calendar-component--item-selected-range'\r\n                                onClick={() => handleCalClick(day.date)}\r\n                            >\r\n                                \r\n                                {day.date.split('-')[2]}\r\n                            </td>\r\n                            :\r\n                            isOtherMonth(day.date, table.month) ?\r\n                                isOtherYear(day.date, table.year) ?\r\n                                <td></td>\r\n                                :\r\n                                <td\r\n                                    className='calendar-component--item-difmonth'\r\n                                    onClick={() => handleCalClick(day.date)}\r\n                                >\r\n                                    {day.date.split('-')[2]}\r\n                                </td>\r\n                            :\r\n                            <td\r\n                                className='calendar-component--item'\r\n                                onClick={() => handleCalClick(day.date)}\r\n                            >\r\n                                {day.date.split('-')[2]}\r\n                            </td>\r\n                            )}\r\n                        </tr>\r\n                        )}\r\n                    </table>\r\n                </div>\r\n                )}\r\n                </div>\r\n                <div className='calendar-component--shortcut'>\r\n                    <form>\r\n                        <label>\r\n                            <select\r\n                                value={dateRangeOption}\r\n                                onChange={(e) => handleDateRangeOption(e.target.value)}\r\n                            >\r\n                                <option value=\"\">Ajanjakson pikavalinta</option>\r\n                                <option value=\"today\">Tänään</option>\r\n                                <option value=\"this-week\">Tulevat tällä viikolla</option>\r\n                                <option value=\"next-week\">Ensi viikolla</option>\r\n                                <option value=\"this-month\">Tulevat tässä kuussa</option>\r\n                                <option value=\"next-month\">Ensi kuussa</option>\r\n                                <option value=\"this-year\">Tulevat tänä vuonna</option>\r\n                            </select>\r\n                        </label>\r\n                    </form>\r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './CountBadgeComponent.css'\r\n\r\nexport default function CountBadge(props) {\r\n    return (\r\n        <div className='count-badge-component'>\r\n            <div className='count-badge-component--item'>\r\n                {props.count}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './SearchInputComponent.css'\r\n\r\nexport default function SearchInput(props) {\r\n\r\n    return (\r\n        <div className='search-input-component'>\r\n            <form>\r\n                <label>\r\n                    <input\r\n                        className=\"input-search\"\r\n                        type=\"search\"\r\n                        value={props.searchText}\r\n                        placeholder={props.placeholder}\r\n                        onChange={(e) => props.setSearchText(e.target.value)}\r\n                    />\r\n                </label>\r\n            </form>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport IconDiv from './IconComponent';\r\nimport './ListItemComponent.css'\r\n\r\nexport default function ListItem(props) {\r\n\r\n    const [selectionOpen, setSelectionOpen] = useState(false)\r\n\r\n    return (\r\n        <div className='list-item-component'>\r\n            <div\r\n                className='list-item-component--header'\r\n                onClick={() => setSelectionOpen(!selectionOpen)}\r\n            >\r\n                <span>{props.item.name}</span>\r\n                <span><i className={selectionOpen ? 'arrow-up':'arrow-down'}></i></span>\r\n            </div>\r\n            {selectionOpen ?\r\n            <div className='list-item-component--options'>\r\n                <div>\r\n                    <div>VALINNAT</div>\r\n                    <div className='list-item-component--options-group'>\r\n                        <span \r\n                            className={props.favourites.filter(fav => fav.name === props.item.name).length > 0 ? 'list-item-component--options-selected':''}\r\n                            onClick={() => props.handleSelection('favourites', props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'star'}\r\n                                definition={'SUOSIKKI'}\r\n                            />   \r\n                        </span>      \r\n                        <span\r\n                            className={props.filters.filter(fil => fil.name === props.item.name).length > 0 ? 'list-item-component--options-selected':''}\r\n                            onClick={() => props.handleSelection('filters', props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'filter'}\r\n                                definition={'SUODATIN'}\r\n                            />\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div>NÄYTÄ</div>\r\n                    <div className='list-item-component--options-group'>\r\n                        <span\r\n                            onClick={() => props.applyQuickSearch(props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'list-ul'}\r\n                                definition={'OTTELUT'}\r\n                            />\r\n                        </span>\r\n                        {['level','team'].includes(props.item.type) ?\r\n                        <span\r\n                            onClick={() => props.applyGetStandings(props.item)}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'trophy'}\r\n                                definition={'SARJATILANNE'}\r\n                            />\r\n                        </span>\r\n                        :\r\n                        <span></span>\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            : <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport ListItem from './ListItemComponent'\r\nimport './ListComponent.css'\r\n\r\nexport default function List(props) {\r\n    return (\r\n        <div className='list-component'>\r\n            <ul>\r\n                {props.items.map(item =>\r\n                    <li key={item.name}>\r\n                        <ListItem\r\n                            item={item}\r\n                            favourites={props.favourites}\r\n                            filters={props.filters}\r\n                            handleSelection={props.handleSelection}\r\n                            applyQuickSearch={props.applyQuickSearch}\r\n                            applyGetStandings={props.applyGetStandings}\r\n                        />\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './ResultsComponent.css'\r\n\r\nexport default function Results(props) {\r\n\r\n    //const numMatches = props.numMatches\r\n    let info = 'Hakutulos: '\r\n\r\n    if (props.numMatches === 0) {\r\n        info += 'ei otteluita.'\r\n    } else if (props.numMatches === 1) {\r\n        info += '1 ottelu.'\r\n    } else {\r\n        info += `${props.numMatches} ottelua.`\r\n    }\r\n\r\n    return (\r\n        <div className='results-component'>\r\n            <span>\r\n                {props.isLoading ?\r\n                props.loadingText\r\n                :\r\n                info\r\n                }\r\n            </span>\r\n            <span \r\n                className={props.changesMade ? 'results-component--update-btn': 'results-component--update-btn-hide'}\r\n                onClick={() => props.applySearch()}\r\n            >PÄIVITÄ HAKUTULOKSET</span>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport IconDiv from './components/IconComponent';\r\nimport Calendar from './components/CalendarComponent';\r\nimport CountBadge from './components/CountBadgeComponent';\r\nimport SearchInput from './components/SearchInputComponent';\r\nimport List from './components/ListComponent'\r\nimport Results from './components/ResultsComponent'\r\nimport './SearchContainer.css';\r\n\r\nexport default function Search(props) {\r\n    /*\r\n    let initialFilters = []\r\n\r\n    if (JSON.parse(window.localStorage.getItem('filters'))) {\r\n        initialFilters = JSON.parse(window.localStorage.getItem('filters'))\r\n    }\r\n\r\n    let initialFavourites = []\r\n\r\n    if (JSON.parse(window.localStorage.getItem('favourites'))) {\r\n        initialFavourites = JSON.parse(window.localStorage.getItem('favourites'))\r\n    }\r\n    */\r\n    const today = new Date().toJSON().split('T')[0]\r\n    const [dateFrom, setDateFrom] = useState(today);\r\n    const [dateTo, setDateTo] = useState(today);\r\n    const [selectedMenuItem, setSelectedMenuItem] = useState('calendar')\r\n    const [searchText, setSearchText] = useState('')\r\n    const [filters, setFilters] = useState(getInitialFilters);\r\n    const [favourites, setFavourites] = useState(getInitialFavourites);\r\n    const [changesMade, setChangesMade] = useState(false);\r\n\r\n    const searchItems = [...props.cities, ...props.levels, ...props.teams]\r\n\r\n    function getInitialFavourites() {\r\n\r\n        if (JSON.parse(window.localStorage.getItem('favourites'))) {\r\n            return JSON.parse(window.localStorage.getItem('favourites'))\r\n        }\r\n        return []\r\n    }\r\n\r\n    function getInitialFilters() {\r\n\r\n        if (JSON.parse(window.localStorage.getItem('filters'))) {\r\n            return JSON.parse(window.localStorage.getItem('filters'))\r\n        }\r\n        return []\r\n    }\r\n\r\n    function handleSelection(group, item) {\r\n        if (group === 'favourites') {\r\n            if (favourites.filter(fav => fav.name === item.name).length === 0) {\r\n                let newFavourites = [...favourites]\r\n                newFavourites.push(item)\r\n                setFavourites(newFavourites)\r\n                window.localStorage.setItem('favourites', JSON.stringify(newFavourites))\r\n            } else {\r\n                let newFavourites = [...favourites].filter(fav => fav.name !== item.name)\r\n                setFavourites(newFavourites)\r\n                window.localStorage.setItem('favourites', JSON.stringify(newFavourites))\r\n            }\r\n        }\r\n        if (group === 'filters') {\r\n            if (filters.filter(fil => fil.name === item.name).length === 0) {\r\n                let newFilters = [...filters]\r\n                newFilters.push(item)\r\n                setFilters(newFilters)\r\n                window.localStorage.setItem('filters', JSON.stringify(newFilters))\r\n            } else {\r\n                let newFilters = [...filters].filter(filter => filter.name !== item.name)\r\n                setFilters(newFilters)\r\n                window.localStorage.setItem('filters', JSON.stringify(newFilters))\r\n            }\r\n        }\r\n    }\r\n\r\n    function applySearch() {\r\n        props.getMatches(`${dateFrom},${dateTo}`, filters)\r\n        setChangesMade(false)\r\n    }\r\n\r\n    function applyQuickSearch(item) {\r\n        props.getMatches('', [item])\r\n        setChangesMade(true)\r\n        props.handleNaviChange('list-ul')\r\n    }\r\n\r\n    function applyGetStandings(item) {\r\n        props.getStandings(item)\r\n        props.handleNaviChange('standings')\r\n    }\r\n\r\n    useEffect(() => {\r\n        setChangesMade(true)\r\n    }, [dateTo, dateFrom, filters]);\r\n\r\n    /*\r\n    useEffect(() => {\r\n        applySearch()\r\n    }, []);\r\n    */\r\n\r\n    return (\r\n        <div className={props.naviSelected === 'search' ? 'container': 'container not-visible'}>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='search-container'>\r\n                    {props.errorText !== '' ?\r\n                    <div className='error-info'>{props.errorText}</div>\r\n                    : <span></span>\r\n                    }\r\n                    <div>\r\n                        <Results\r\n                            changesMade={changesMade}\r\n                            numMatches={props.matches.length}\r\n                            applySearch={applySearch}\r\n                            isLoading={props.isLoading}\r\n                            loadingText={props.loadingText}\r\n                        />\r\n                    </div>\r\n                    <div className='search-container--menu'>\r\n                        <div\r\n                            className={selectedMenuItem === 'calendar' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('calendar')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'calendar'}\r\n                                definition={'AJANJAKSO'}\r\n                            />\r\n                        </div>\r\n                        <div\r\n                            className={selectedMenuItem === 'search' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('search')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'search'}\r\n                                definition={'ETSI'}\r\n                            />\r\n                        </div>\r\n                        <span\r\n                            className={selectedMenuItem === 'filter' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('filter')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'filter'}\r\n                                definition={'SUODATTIMET'}\r\n                            />\r\n                            <CountBadge count={filters.length} />\r\n                        </span>\r\n                        <span\r\n                            className={selectedMenuItem === 'star' ? 'search-container--menu-item-selected':'search-container--menu-item'}\r\n                            onClick={() => setSelectedMenuItem('star')}\r\n                        >\r\n                            <IconDiv\r\n                                icon={'star'}\r\n                                definition={'SUOSIKIT'}\r\n                            />\r\n                            <CountBadge count={favourites.length} />\r\n                        </span>\r\n                    </div>\r\n                    <div className='search-container--item-group'>\r\n                        <div className={selectedMenuItem === 'calendar' ? '':'not-visible'}>\r\n                            <Calendar\r\n                                dateFrom={dateFrom}\r\n                                setDateFrom={setDateFrom}\r\n                                dateTo={dateTo}\r\n                                setDateTo={setDateTo}\r\n                            />\r\n                        </div>\r\n                        <div className={selectedMenuItem === 'search' ? '':'not-visible'}>\r\n                            <SearchInput\r\n                                searchText={searchText}\r\n                                setSearchText={setSearchText}\r\n                                placeholder={'etsi sarjaa, joukkuetta, kaupunkia...'}\r\n                            />\r\n                            <List\r\n                                items={searchText === '' ? [] : searchItems.filter(item => searchText.split(' ').every(i => item.name.toLowerCase().includes(i.toLowerCase()))).slice(0,20)}\r\n                                filters={filters}\r\n                                favourites={favourites}\r\n                                handleSelection={handleSelection}\r\n                                applyQuickSearch={applyQuickSearch}\r\n                                applyGetStandings={applyGetStandings}\r\n                            />\r\n                        </div>\r\n                        <div className={selectedMenuItem === 'filter' ? '':'not-visible'}>\r\n                            {filters.length > 0 ?\r\n                            <List\r\n                                items={filters}\r\n                                filters={filters}\r\n                                favourites={favourites}\r\n                                handleSelection={handleSelection}\r\n                                applyQuickSearch={applyQuickSearch}\r\n                                applyGetStandings={applyGetStandings}\r\n                            />\r\n                            : <div></div>\r\n                            }\r\n                            \r\n                        </div>\r\n                        <div className={selectedMenuItem === 'star' ? '':'not-visible'}>\r\n                            {favourites.length > 0 ?\r\n                            <List\r\n                                items={favourites}\r\n                                filters={filters}\r\n                                favourites={favourites}\r\n                                handleSelection={handleSelection}\r\n                                applyQuickSearch={applyQuickSearch}\r\n                                applyGetStandings={applyGetStandings} \r\n                            />\r\n                            : <div></div>\r\n                            }\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n} ","import React, { useState } from 'react'\r\nimport './MatchListItemsComponent.css';\r\nimport CountBadge from './CountBadgeComponent'\r\n\r\nexport default function MatchListItems(props) {\r\n\r\n    const [itemIsOpen, setItemIsOpen] = useState(props.itemIsOpen)\r\n\r\n    //const city = props.matches.filter(m => m.venue_name === props.header)[0].city\r\n    \r\n    function displayVenue(venue) {\r\n        let city = props.matches.filter(m => m.venue_name === venue)[0].city\r\n        \r\n        if (venue.includes(city)) {\r\n            return venue\r\n        }\r\n        return venue + ', ' + city\r\n    }\r\n\r\n    let info = '('\r\n\r\n    if (props.matches.length === 0) {\r\n        info += 'ei otteluita)'\r\n    } else if (props.matches.length === 1) {\r\n        info += '1 ottelu)'\r\n    } else {\r\n        info += `${props.matches.length} ottelua)`\r\n    }\r\n\r\n\r\n    console.log(props)\r\n    return (\r\n        <div className='matchlist-component'>\r\n            <div\r\n                className='matchlist-component--header'\r\n                onClick={() => setItemIsOpen(!itemIsOpen)}\r\n            >\r\n                <div className='matchlist-component--header-name'>\r\n                    <span>{props.groupbyItem === 'venue_name' ? displayVenue(props.header) : props.header}</span>\r\n                    <span className='matchlist-component--header-count'><CountBadge count={props.matches.length} /></span>\r\n                </div>\r\n                <div><i className={itemIsOpen ? 'arrow-up':'arrow-down'}></i></div>\r\n            </div>\r\n            {itemIsOpen ? \r\n            props.matches.map(match =>\r\n                <div \r\n                    key={match['_id']}\r\n                    className='matchlist-component--match-details'\r\n                >\r\n                    <div className='matchlist-component--match-details--whenwhere'>\r\n                        <div className='matchlist-component--match-details--whenwhere-when'>\r\n                            {props.groupbyItem !== 'date' ?\r\n                            <span className='matchlist-component--match-details-date'>{match.date}</span>\r\n                            : <span></span>\r\n                            }\r\n                            <span\r\n                                className='matchlist-component--match-details-time'\r\n                            >{match.time}</span>\r\n                        </div>\r\n                        <div className='matchlist-component--match-details--whenwhere-where'>\r\n                            {props.groupbyItem !== 'venue_name' ?\r\n                            <span\r\n                                className='matchlist-component--match-details-venue'\r\n                            >\r\n                                {props.groupbyItem === 'city' ?\r\n                                    match.venue_name\r\n                                    :\r\n                                    displayVenue(match.venue_name)\r\n                                }\r\n                            </span>\r\n                            : <span></span>\r\n                            }\r\n                            {!['city','venue_name'].includes(props.groupbyItem) ?\r\n                            <span\r\n                                className='matchlist-component--match-details-city'\r\n                            ></span>\r\n                            : <span></span>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    <div className='matchlist-component--match-details--who'>\r\n                        <div>\r\n                            {props.groupbyItem !== 'level' ?\r\n                            <span\r\n                                className='matchlist-component--match-details-level'\r\n                            >{match.level}</span>\r\n                            : <span></span>\r\n                            }\r\n                        </div>\r\n                        <div className='matchlist-component--match-details-team-info'>\r\n                            <div\r\n                                className='matchlist-component--match-details-home'\r\n                            >{match.home_name}</div>\r\n                            <div\r\n                                className='matchlist-component--match-details-score'\r\n                            >{match.score}</div>\r\n                            <div\r\n                                className='matchlist-component--match-details-away'\r\n                            >{match.away_name}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>)\r\n            : <div></div>\r\n            }\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport './MatchListContainer.css';\r\nimport MatchListItems from './components/MatchListItemsComponent';\r\n\r\nexport default function MatchList(props) {\r\n\r\n    const [groupbyItem, setGroupByItem] = useState('date')\r\n\r\n    let groupbySet = new Set([])\r\n    props.matches.map(match => {\r\n        groupbySet.add(match[groupbyItem])\r\n    })\r\n\r\n    function sortedGroupbySet() {\r\n        return groupbyItem === 'date' ? Array.from(groupbySet) : Array.from(groupbySet).sort()\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='matchlist-container'>\r\n                    <div className='matchlist-container--grouping'>\r\n                        <form>\r\n                            <label> {'Ryhmittely: '}\r\n                                <select\r\n                                    value={groupbyItem}\r\n                                    onChange={(e) => setGroupByItem(e.target.value)}\r\n                                >\r\n                                    <option value=\"date\">Päivämäärä</option>\r\n                                    <option value=\"level\">Sarjataso</option>\r\n                                    <option value=\"city\">Kaupunki</option>\r\n                                    <option value=\"venue_name\">Kenttä</option>\r\n                                </select>\r\n                            </label>\r\n                        </form>\r\n                    </div>\r\n                    {sortedGroupbySet().map((header, index) =>\r\n                        <MatchListItems\r\n                            key={header}\r\n                            header={header}\r\n                            groupbyItem={groupbyItem}\r\n                            matches={props.matches.filter(m => m[groupbyItem] === header)}\r\n                            itemIsOpen={index === 0 ? true : false}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport './LocationPopupContainer.css';\r\nimport MatchListItems from './components/MatchListItemsComponent'\r\nimport IconDiv from './components/IconComponent'\r\n\r\nexport default function LocationPopup(props) {\r\n\r\n    const location = {...props.selectedLocation}\r\n\r\n    function getVenues() {\r\n        let venues = new Set([])\r\n        props.matches.map(m => {\r\n            venues.add(m.venue_name)\r\n        })\r\n        return Array.from(venues)\r\n    }\r\n\r\n    function getDirections(lat,lon) {\r\n        let url = `https://www.google.fi/maps/dir//${lat},${lon}/@${lat},${lon},11z`\r\n        return url\r\n    }\r\n\r\n    /*\r\n    {getVenues(location._id).map(venue =>\r\n                    <MatchListItems \r\n                        key={venue}\r\n                        onMap={false}\r\n                        header={venue}\r\n                        groupbyItem={'venue_name'}\r\n                        matches={props.matches.filter(match => match.venue_name === venue)}\r\n                    />\r\n                    )}\r\n    */\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div className='locationpopup-container'>\r\n                    <div\r\n                        className='close-btn'\r\n                        onClick={() => props.setShowPopup(false)}\r\n                    >X</div>\r\n                    <div className='location-address-bar'>\r\n                        <div>\r\n                            <div className='location-address'>\r\n                                {location.address}\r\n                            </div>\r\n                            <div className='location-address-city'>\r\n                                {location.postalcode} {location.city}\r\n                            </div>\r\n                        </div>\r\n                        <div\r\n                            className='location-directions'\r\n                            onClick={() => window.open(getDirections(location.lat,location.lon))}\r\n                        >\r\n                            <IconDiv \r\n                                icon={'directions'}\r\n                                definition={'REITTIOHJE'}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    {getVenues().map(venue =>\r\n                        <MatchListItems \r\n                            key={venue}\r\n                            header={venue}\r\n                            groupbyItem={'venue_name'}\r\n                            matches={props.matches.filter(match => match.venue_name === venue)}\r\n                            itemIsOpen={true}\r\n                        />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState } from 'react';\r\nimport './LocateContainer.css'\r\nimport './components/ListComponent'\r\nimport SearchInput from './components/SearchInputComponent'\r\n\r\nexport default function Locate(props) {\r\n\r\n    const [searchText, setSearchText] = useState('')\r\n\r\n    let cities = [...props.cities]\r\n    cities.unshift({'type': 'city', 'name': 'Suomi'})\r\n\r\n    function handleSelect(city) {\r\n        props.handleMapCenterChange(city)\r\n        props.handleNaviChange('map')\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('map')}\r\n                >X</div>\r\n                <div className='locate-components'>\r\n                    <SearchInput\r\n                        searchText={searchText}\r\n                        setSearchText={setSearchText}\r\n                        placeholder={'etsi kaupunki...'}\r\n                    />\r\n                    <div className='city-list'>\r\n                        <ul>\r\n                            {cities.filter(c => c.name.toLowerCase().includes(searchText.toLowerCase())).map(city =>\r\n                                <li\r\n                                    key={city.name}\r\n                                >\r\n                                    <span onClick={() => handleSelect(city)}>\r\n                                        {city.name}\r\n                                    </span>\r\n                                </li>\r\n                            )}\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './StandingsContainer.css'\r\n\r\nexport default function Standings(props) {\r\n\r\n    const standings = [...props.standings]\r\n    let initialSelectedGroup\r\n    try {\r\n        initialSelectedGroup = standings[0].name\r\n    } catch {\r\n        initialSelectedGroup = 'Ongelma haettaessa sarjatilannetta'\r\n    }\r\n\r\n    const [selectedGroup, setSelectedGroup] = useState(initialSelectedGroup)\r\n    const [selectedSort, setSelectedSort] = useState('points')\r\n    const [sortDescending, setSortDescending] = useState(true)\r\n\r\n    const groups = standings.map(group => {return group.name})\r\n\r\n    const headings = {\r\n        'played': 'O',\r\n        'wins': 'V',\r\n        'draws': 'T',\r\n        'losses': 'H',\r\n        'scored': 'TM',\r\n        'conceded': 'PM',\r\n        'difference': '+/-',\r\n        'points': 'P'\r\n    }\r\n\r\n    function sortedStandingsByGroup() {\r\n        let standingsByGroup = standings.filter(g => g.name === selectedGroup)\r\n\r\n        let data = {\r\n            'name': selectedGroup,\r\n            'standings': []\r\n        }\r\n\r\n        standingsByGroup[0].standings.sort((a,b) => {\r\n            return sortDescending ? b[selectedSort] - a[selectedSort] : a[selectedSort] - b[selectedSort]\r\n        }).map(item => {\r\n            data['standings'].push(item)\r\n        })\r\n\r\n        return [data]\r\n    }\r\n\r\n    function applySort(header) {\r\n        console.log(header)\r\n        if (selectedSort === header) {\r\n            sortDescending ? setSortDescending(false) : setSortDescending(true)\r\n            \r\n        } else {\r\n            setSelectedSort(header)\r\n            setSortDescending(true)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div\r\n                    className='close-btn'\r\n                    onClick={() => props.handleNaviChange('search')}\r\n                >X</div>\r\n                <div className='standings-container'>\r\n                    <h3>Sarjatilanne: {props.selectedStandings.name}</h3>\r\n                    {groups.length > 1 ?\r\n                        <form>\r\n                            <select\r\n                                value={selectedGroup}\r\n                                onChange={(e) => setSelectedGroup(e.target.value)}\r\n                            >\r\n                                {groups.map(group =>\r\n                                    <option value={group}>{group}</option>\r\n                                )}\r\n                            </select>\r\n                        </form>\r\n                        :\r\n                        groups[0] !== 'Sarja' ?\r\n                        <span>{groups[0]}</span>\r\n                        :\r\n                        <span></span>\r\n                    }\r\n                \r\n                    {sortedStandingsByGroup().map(group =>\r\n                        <div key={group.name} className='group-component'>\r\n                            <table className='standings-group-table'>\r\n                                <tr>\r\n                                    <th></th>\r\n                                    <th></th>\r\n                                    {Object.keys(headings).map(heading =>\r\n                                        heading === selectedSort ?\r\n                                            <th onClick={() => applySort(heading)}>\r\n                                            <span>{headings[heading]} </span>\r\n                                            {sortDescending ?\r\n                                                <span>&darr;</span>\r\n                                                :\r\n                                                <span>&uarr;</span>\r\n                                            }\r\n                                            </th>\r\n                                            :\r\n                                            <th onClick={() => applySort(heading)}>\r\n                                                <span>{headings[heading]}</span>\r\n                                            </th>\r\n                                        \r\n                                    )}\r\n                                </tr>\r\n                                {group.standings.map(team =>\r\n                                    <tr \r\n                                        key={team.name}\r\n                                        name={team.name}\r\n                                        id={team.name === 'NuPS' ? 'standings-container--team-row':''}\r\n                                    >\r\n                                        <td>{group.standings.indexOf(team)+1}.</td>\r\n                                        <td id={team.name} >{team.team}</td>\r\n                                        <td>{team.played}</td>\r\n                                        <td>{team.wins}</td>\r\n                                        <td>{team.draws}</td>\r\n                                        <td>{team.losses}</td>\r\n                                        <td>{team.scored}</td>\r\n                                        <td>{team.conceded}</td>\r\n                                        <td>{team.difference}</td>\r\n                                        <td>{team.points}</td>\r\n                                    </tr>\r\n                                )}\r\n                            </table>\r\n                            \r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport './LoadingContainer.css'\r\n\r\nexport default function Loading(props) {\r\n    return (\r\n        <div className='container'>\r\n            <div className='container-box'>\r\n                <div className='loading-container'>\r\n                    <div className='loader'>{props.loadingText}</div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Map from './containers/MapContainer'\nimport Navi from './containers/NaviContainer'\nimport Info from './containers/InfoContainer'\nimport Search from './containers/SearchContainer';\nimport MatchList from './containers/MatchListContainer'\nimport LocationPopup from './containers/LocationPopupContainer'\nimport Locate from './containers/LocateContainer';\nimport Standings from './containers/StandingsContainer'\nimport Loading from './containers/LoadingContainer'\n\nfunction App() {\n\n  const [mapCenter, setMapCenter] = useState({'city': 'Suomi', 'lat': 63, 'lon': 25});\n  const [showPopup, setShowPopup] = useState(false)\n  const [selectedLocation, setSeletedLocation] = useState({})\n  const [naviSelected, setNaviSelected] = useState('search');\n  const [teams, setTeams] = useState([]);\n  const [cities, setCities] = useState([]);\n  const [levels, setLevels] = useState([]);\n  const [matches, setMatches] = useState([]);\n  const [locations, setLocations] = useState([]);\n  const [standings, setStandings] = useState([]);\n  const [selectedStandings, setSelectedStandings] = useState({})\n  const [isLoading, setIsLoading] = useState(false)\n  const [loadingText, setLoadingText] = useState('')\n  const [errorText, setErrorText] = useState('')\n  const [DBinfo, setDBinfo] = useState({})\n\n\n  function handleNaviChange(item) {\n    setNaviSelected(item)\n  }\n\n  function handleLocationPopup(item) {\n    setSeletedLocation(item)\n    setShowPopup(true)\n  }\n\n  function handleMapCenterChange(item) {\n\n    if (item.name === 'Suomi') {\n      setMapCenter({'city': 'Suomi', 'lat': 63, 'lon': 25})\n    } else {\n      let city = { 'city': {...item}}\n\n      axios.post('/api/citycoordinates', city)\n      .then(res => {\n        setMapCenter(res.data[0])\n      })\n      .catch(error => console.log(error))\n      }\n  }\n\n  function getData(name) {\n    axios.get('api/'+name)\n    .then(res => {\n      if (name === 'teams') {\n        setTeams(res.data.filter(team => team.name.charAt(0) > '9'))\n      }\n      if (name === 'cities') {\n        setCities(res.data.filter(city => city.name !== null))\n      }\n      if (name === 'levels') {\n        setLevels(res.data)\n      }\n      if (name === 'info') {\n        setDBinfo(res.data[0])\n      }\n    })\n    .catch(error => console.log(error))\n  }\n\n  function getMatches(dates, filters) {\n    setIsLoading(true)\n    setLoadingText('Haetaan otteluita...')\n\n    let data = {}\n\n    if (dates !== '') {\n      data['dates'] = dates\n    }\n    if (filters.length > 0) {\n      filters.map(filter => {\n        data[filter.type] = []\n        data[filter.type].push({ \"name\": filter.name })\n      })\n    }\n\n    axios.post('/api/matches', data)\n    .then(res => {\n      setMatches(res.data)\n      let locIds = new Set([])\n      res.data.map(m => locIds.add(m.location_id))\n      return Array.from(locIds)\n    })\n    .then(ids => {\n      if (ids.length > 0) {\n        axios.get('/api/locations?ids='+ids.join(','))\n        .then(r => {\n          setLocations(r.data)\n          console.log(r.data.length)\n        })\n        .catch(error => console.log(error))\n      } else {\n        setLocations([])\n        setMatches([])\n      }\n    })\n    .then(() => {\n      setIsLoading(false)\n      setLoadingText('')\n    })\n    .catch(error => {\n      console.log(error)\n      setIsLoading(false)\n      setLoadingText('')\n      setErrorText('Ongelma ilmeni haettaessa otteluita.')\n      setTimeout(() => setErrorText(''), 6000)\n    })\n  }\n\n  function getStandings(item) {\n    setIsLoading(true)\n    setLoadingText('Haetaan sarjatilannetta...')\n\n    let standings = {'standings': item}\n\n    axios.post('/api/standings', standings)\n    .then(res => {\n      console.log(res.data)\n      setStandings(res.data)\n      setSelectedStandings(item)\n    })\n    .then(() => {\n      setIsLoading(false)\n      setLoadingText('')\n    })\n    .catch(error => {\n      console.log(error)\n      handleNaviChange('search')\n      setIsLoading(false)\n      setLoadingText('')\n      setErrorText('Ongelma ilmeni haettaessa sarjatilannetta.')\n      setTimeout(() => setErrorText(''), 6000)\n    })\n  }\n\n  \n  useEffect(() => {\n    getData('cities')\n    getData('levels')\n    getData('teams')\n    getData('info')\n  }, []);\n  \n\n  return (\n    <div className=\"App\">\n\n      <Map\n        mapCenter={mapCenter}\n        locations={locations}\n        matches={matches}\n        handleLocationPopup={handleLocationPopup}\n      />\n\n      {showPopup ?\n      <LocationPopup\n          setShowPopup={setShowPopup}\n          selectedLocation={selectedLocation}\n          matches={matches.filter(match => match.location_id === selectedLocation._id)}\n      /> : <div></div>\n      }\n\n      <Navi\n        naviSelected={naviSelected}\n        handleNaviChange={handleNaviChange}\n        numMatches={matches.length}\n      />\n\n      {naviSelected === 'eye' ?\n      <Locate \n        cities={cities}\n        handleMapCenterChange={handleMapCenterChange}\n        handleNaviChange={handleNaviChange}\n      /> : <div></div>}\n\n      <Search\n        naviSelected={naviSelected}\n        teams={teams}\n        cities={cities}\n        levels={levels}\n        matches={matches}\n        getMatches={getMatches}\n        handleNaviChange={handleNaviChange}\n        getStandings={getStandings}\n        isLoading={isLoading}\n        loadingText={loadingText}\n        errorText={errorText}\n      />\n\n      {naviSelected === 'info' ?\n      <Info\n        handleNaviChange={handleNaviChange}\n        DBinfo={DBinfo}\n      /> : <div></div>\n      }\n\n      {naviSelected === 'list-ul' ?\n        isLoading ?\n        <Loading loadingText={loadingText} />\n        :\n        matches.length === 0 ?\n        handleNaviChange('search')\n        :\n        <MatchList\n          matches={matches}\n          handleNaviChange={handleNaviChange}\n        />\n      : <div></div>\n      }\n\n      {naviSelected === 'standings' ?\n        isLoading ?\n        <Loading loadingText={loadingText} />\n        :\n        <Standings\n          standings={standings}\n          selectedStandings={selectedStandings}\n          handleNaviChange={handleNaviChange}\n        />\n      : <div></div>\n      }\n      \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}